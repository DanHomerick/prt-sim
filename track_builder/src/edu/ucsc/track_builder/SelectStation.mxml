<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="800" height="300"
				title="Select Station..."
	            showCloseButton="true"
	            initialize="initData()"
	            close="PopUpManager.removePopUp(this);" >
	            
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import com.google.maps.LatLngBounds;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			import edu.ucsc.track_builder.Globals;
			
			[Bindable]
			public var stationsArray:ArrayCollection;
			
			public function initData():void {
				stationsArray = new ArrayCollection();
				for each (var overlay:StationOverlay in Globals.stations.overlays) {
					var station:Station = overlay.station;
					var unload:int = 0;
					var load:int = 0;
					var load_unload:int = 0;
					var queue:int = 0;
					var total:int = 0;					
					for each (var plat:Platform in station.platforms) {						
						for each (var berth:Berth in plat.berths) {
							 if (berth.loading && berth.unloading) {
							 	load_unload += 1;
							 } else if (berth.loading) {
							 	load += 1;
							 } else if (berth.unloading) {
							 	unload += 1;
							 } else {
							 	queue += 1;
							 }
							 total += 1;
						}
					}
					
					var segments:Array = [];
					for each (var ts:TrackSegment in station.allSegments) {
						segments.push(Utility.toIntegerId(ts.id));
					}
					
					stationsArray.addItem({id:station.id,
					                       radius:station.coverageRadius,
					                       platforms:station.platforms.length,
					                       total:total,
					                       unload:unload,
					                       load:load,
					                       load_unload:load_unload,
					                       queue:queue,
					                       label:station.label,
					                       segments:segments,
					                       overlay:overlay,
					                       station:station});
					                       
				}
				var sort:Sort = new Sort();
				sort.fields = [new SortField("id")]
				stationsArray.sort = sort
				stationsArray.refresh();
			}
			
			public function onClick(event:ListEvent):void {
				try {
					var overlay:StationOverlay = stationsArray[event.rowIndex].overlay;
					// Change the location and zoom to center on the piece;
					var bounds:LatLngBounds = overlay.getLatLngBounds();
					Globals.map.setCenter(bounds.getCenter());
					var zoom:Number = Globals.map.getBoundsZoomLevel(bounds);
					Globals.map.setZoom(zoom);
					overlay.onSelect(null);
				} catch (e:TypeError) {
					trace(e);	
				}
			}
			
		]]>
	</mx:Script>

	<mx:DataGrid width="100%" height="100%" dataProvider="{this.stationsArray}" itemClick="this.onClick(event);" >
        <mx:columns>
            <mx:DataGridColumn dataField="id" headerText="ID" width="100"/>  
            <mx:DataGridColumn dataField="radius" headerText="CoverageRadius" width="80"/>
            <mx:DataGridColumn dataField="platforms" headerText="Platforms" width="50"/>
            <mx:DataGridColumn dataField="total" headerText="Berths" width="50"/>
            <mx:DataGridColumn dataField="unload" headerText="Unload" width="50"/>
            <mx:DataGridColumn dataField="load" headerText="Load" width="50"/>
            <mx:DataGridColumn dataField="load_unload" headerText="Load|Unload" width="100"/>
            <mx:DataGridColumn dataField="queue" headerText="Queue" width="50"/>
            <mx:DataGridColumn dataField="segments" headerText="TrackSegments" width="200"/>
            <mx:DataGridColumn dataField="label" headerText="Label" width="100"/>
            
        </mx:columns>
	</mx:DataGrid>	
	
</mx:TitleWindow>