// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#ifndef PROTOBUF_api_2eproto__INCLUDED
#define PROTOBUF_api_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace prt {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_api_2eproto();
void protobuf_AssignDesc_api_2eproto();
void protobuf_ShutdownFile_api_2eproto();

class PolyCoeffs;
class Spline;
class CtrlCmdVehicleTrajectory;
class CtrlCmdVehicleItinerary;
class CtrlCmdPassengersEmbark;
class CtrlCmdPassengersDisembark;
class CtrlCmdSwitch;
class CtrlRequestVehicleStatus;
class CtrlRequestStationStatus;
class CtrlRequestStationSummary;
class CtrlRequestPassengerStatus;
class CtrlRequestSwitchStatus;
class CtrlRequestTrackSegmentStatus;
class CtrlRequestTotalStatus;
class CtrlSetnotifyVehiclePosition;
class CtrlSetnotifyTime;
class CtrlResume;
class SimGreeting;
class SimStart;
class SimEnd;
class SimUnimplemented;
class SimAbortVehicleSpeed;
class SimCompletePassengerEmbark;
class SimCompletePassengerDisembark;
class SimCompleteSwitch;
class SimResponseVehicleStatus;
class SimResponseStationStatus;
class SimResponseStationSummary;
class SimResponsePassengerStatus;
class SimResponseSwitchStatus;
class SimResponseTrackSegmentStatus;
class SimResponseTotalStatus;
class SimRequestSwitchCmd;
class SimNotifyVehiclePosition;
class SimNotifyTime;
class SimNotifyVehicleArrive;
class SimNotifyVehicleExit;
class SimNotifyVehicleReadyLoad;
class SimNotifyVehicleCollision;
class SimNotifyPassengerEmbarkStart;
class SimNotifyPassengerEmbarkEnd;
class SimNotifyPassengerDisembarkStart;
class SimNotifyPassengerDisembarkEnd;
class SimEventTrackSegmentDisabled;
class SimEventTrackSegmentReenabled;
class SimEventSwitchDisabled;
class SimEventSwitchReenabled;
class SimEventStationDisabled;
class SimEventStationReenabled;
class SimEventVehicleDisabled;
class SimEventVehicleReenabled;
class SimEventPassengerCreated;
class SimEventPassengerChangedest;
class SimMsgHdrInvalidSeparator;
class SimMsgHdrInvalidType;
class SimMsgHdrInvalidID;
class SimMsgHdrInvalidTime;
class SimMsgHdrInvalidSize;
class SimMsgBodyInvalid;
class SimMsgBodyInvalidId;
class VehicleStatus;
class StationSummary;
class StationStatus;
class PlatformStatus;
class BerthStatus;
class PassengerStatus;
class RoutingEntry;
class SwitchStatus;
class TrackSegmentStatus;

enum Misc {
  MSG_SEP = -32123,
  MSG_HEADER_SIZE = 14,
  NONE_ID = -1
};
bool Misc_IsValid(int value);
const Misc Misc_MIN = MSG_SEP;
const Misc Misc_MAX = MSG_HEADER_SIZE;
const int Misc_ARRAYSIZE = Misc_MAX + 1;

const ::google::protobuf::EnumDescriptor* Misc_descriptor();
inline const ::std::string& Misc_Name(Misc value) {
  return ::google::protobuf::internal::NameOfEnum(
    Misc_descriptor(), value);
}
inline bool Misc_Parse(
    const ::std::string& name, Misc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Misc>(
    Misc_descriptor(), name, value);
}
enum CtrlMsgType {
  CTRL_CMD_VEHICLE_TRAJECTORY = 1,
  CTRL_CMD_VEHICLE_ITINERARY = 2,
  CTRL_CMD_SWITCH = 3,
  CTRL_CMD_PASSENGERS_EMBARK = 4,
  CTRL_CMD_PASSENGERS_DISEMBARK = 5,
  CTRL_REQUEST_VEHICLE_STATUS = 10,
  CTRL_REQUEST_STATION_STATUS = 11,
  CTRL_REQUEST_STATION_SUMMARY = 12,
  CTRL_REQUEST_PASSENGER_STATUS = 13,
  CTRL_REQUEST_SWITCH_STATUS = 14,
  CTRL_REQUEST_TRACKSEGMENT_STATUS = 15,
  CTRL_REQUEST_TOTAL_STATUS = 16,
  CTRL_SETNOTIFY_VEHICLE_POSITION = 20,
  CTRL_SETNOTIFY_TIME = 50,
  CTRL_RESUME = 91
};
bool CtrlMsgType_IsValid(int value);
const CtrlMsgType CtrlMsgType_MIN = CTRL_CMD_VEHICLE_TRAJECTORY;
const CtrlMsgType CtrlMsgType_MAX = CTRL_RESUME;
const int CtrlMsgType_ARRAYSIZE = CtrlMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CtrlMsgType_descriptor();
inline const ::std::string& CtrlMsgType_Name(CtrlMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CtrlMsgType_descriptor(), value);
}
inline bool CtrlMsgType_Parse(
    const ::std::string& name, CtrlMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CtrlMsgType>(
    CtrlMsgType_descriptor(), name, value);
}
enum LocationType {
  TRACK_SEGMENT = 0,
  SWITCH = 10,
  STATION = 20,
  PLATFORM = 30,
  BERTH = 40,
  VEHICLE = 50,
  PASSENGER = 60,
  NONE = 70
};
bool LocationType_IsValid(int value);
const LocationType LocationType_MIN = TRACK_SEGMENT;
const LocationType LocationType_MAX = NONE;
const int LocationType_ARRAYSIZE = LocationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationType_descriptor();
inline const ::std::string& LocationType_Name(LocationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationType_descriptor(), value);
}
inline bool LocationType_Parse(
    const ::std::string& name, LocationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationType>(
    LocationType_descriptor(), name, value);
}
enum StationPolicy {
  LOBBY = 1,
  QUEUE = 2
};
bool StationPolicy_IsValid(int value);
const StationPolicy StationPolicy_MIN = LOBBY;
const StationPolicy StationPolicy_MAX = QUEUE;
const int StationPolicy_ARRAYSIZE = StationPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* StationPolicy_descriptor();
inline const ::std::string& StationPolicy_Name(StationPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    StationPolicy_descriptor(), value);
}
inline bool StationPolicy_Parse(
    const ::std::string& name, StationPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StationPolicy>(
    StationPolicy_descriptor(), name, value);
}
enum SimMsgType {
  SIM_GREETING = 1000,
  SIM_COMPLETE_PASSENGER_EMBARK = 1002,
  SIM_COMPLETE_PASSENGER_DISEMBARK = 1003,
  SIM_COMPLETE_SWITCH = 1004,
  SIM_RESPONSE_VEHICLE_STATUS = 1010,
  SIM_RESPONSE_STATION_STATUS = 1011,
  SIM_RESPONSE_STATION_SUMMARY = 1012,
  SIM_RESPONSE_PASSENGER_STATUS = 1013,
  SIM_RESPONSE_SWITCH_STATUS = 1014,
  SIM_RESPONSE_TRACKSEGMENT_STATUS = 1015,
  SIM_RESPONSE_TOTAL_STATUS = 1016,
  SIM_NOTIFY_VEHICLE_POSITION = 1020,
  SIM_NOTIFY_VEHICLE_ARRIVE = 1021,
  SIM_NOTIFY_VEHICLE_EXIT = 1022,
  SIM_NOTIFY_VEHICLE_READY_LOAD = 1023,
  SIM_NOTIFY_VEHICLE_COLLISION = 1024,
  SIM_NOTIFY_PASSENGER_EMBARK_START = 1031,
  SIM_NOTIFY_PASSENGER_EMBARK_END = 1032,
  SIM_NOTIFY_PASSENGER_DISEMBARK_START = 1033,
  SIM_NOTIFY_PASSENGER_DISEMBARK_END = 1034,
  SIM_NOTIFY_TIME = 1050,
  SIM_REQUEST_SWITCH_CMD = 1060,
  SIM_EVENT_TRACKSEGMENT_DISABLED = 1100,
  SIM_EVENT_TRACKSEGMENT_REENABLED = 1101,
  SIM_EVENT_SWITCH_DISABLED = 1102,
  SIM_EVENT_SWITCH_REENABLED = 1103,
  SIM_EVENT_STATION_DISABLED = 1104,
  SIM_EVENT_STATION_REENABLED = 1105,
  SIM_EVENT_VEHICLE_DISABLED = 1106,
  SIM_EVENT_VEHICLE_REENABLED = 1107,
  SIM_EVENT_PASSENGER_CREATED = 1108,
  SIM_EVENT_PASSENGER_CHANGEDEST = 1109,
  SIM_START = 1200,
  SIM_END = 1201,
  SIM_UNIMPLEMENTED = 1202,
  SIM_MSG_HDR_INVALID_SEPARATOR = 1300,
  SIM_MSG_HDR_INVALID_TYPE = 1301,
  SIM_MSG_HDR_INVALID_ID = 1302,
  SIM_MSG_HDR_INVALID_TIME = 1303,
  SIM_MSG_HDR_INVALID_SIZE = 1304,
  SIM_MSG_HDR_INVALID_PBSTR = 1305,
  SIM_MSG_BODY_INVALID = 1310,
  SIM_MSG_BODY_INVALID_ID = 1311,
  SIM_ABORT_VEHICLE_SPEED = 1401
};
bool SimMsgType_IsValid(int value);
const SimMsgType SimMsgType_MIN = SIM_GREETING;
const SimMsgType SimMsgType_MAX = SIM_ABORT_VEHICLE_SPEED;
const int SimMsgType_ARRAYSIZE = SimMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SimMsgType_descriptor();
inline const ::std::string& SimMsgType_Name(SimMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SimMsgType_descriptor(), value);
}
inline bool SimMsgType_Parse(
    const ::std::string& name, SimMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SimMsgType>(
    SimMsgType_descriptor(), name, value);
}
// ===================================================================

class PolyCoeffs : public ::google::protobuf::Message {
 public:
  PolyCoeffs();
  virtual ~PolyCoeffs();
  
  PolyCoeffs(const PolyCoeffs& from);
  
  inline PolyCoeffs& operator=(const PolyCoeffs& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PolyCoeffs& default_instance();
  
  void Swap(PolyCoeffs* other);
  
  // implements Message ----------------------------------------------
  
  PolyCoeffs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PolyCoeffs& from);
  void MergeFrom(const PolyCoeffs& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated float coeffs = 1 [packed = true];
  inline int coeffs_size() const;
  inline void clear_coeffs();
  static const int kCoeffsFieldNumber = 1;
  inline float coeffs(int index) const;
  inline void set_coeffs(int index, float value);
  inline void add_coeffs(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      coeffs() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_coeffs();
  
  // @@protoc_insertion_point(class_scope:prt.PolyCoeffs)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< float > coeffs_;
  mutable int _coeffs_cached_byte_size_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PolyCoeffs* default_instance_;
};
// -------------------------------------------------------------------

class Spline : public ::google::protobuf::Message {
 public:
  Spline();
  virtual ~Spline();
  
  Spline(const Spline& from);
  
  inline Spline& operator=(const Spline& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Spline& default_instance();
  
  void Swap(Spline* other);
  
  // implements Message ----------------------------------------------
  
  Spline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Spline& from);
  void MergeFrom(const Spline& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .prt.PolyCoeffs polys = 1;
  inline int polys_size() const;
  inline void clear_polys();
  static const int kPolysFieldNumber = 1;
  inline const ::prt::PolyCoeffs& polys(int index) const;
  inline ::prt::PolyCoeffs* mutable_polys(int index);
  inline ::prt::PolyCoeffs* add_polys();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::PolyCoeffs >&
      polys() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::PolyCoeffs >*
      mutable_polys();
  
  // repeated double times = 2 [packed = true];
  inline int times_size() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline double times(int index) const;
  inline void set_times(int index, double value);
  inline void add_times(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      times() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_times();
  
  // @@protoc_insertion_point(class_scope:prt.Spline)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::prt::PolyCoeffs > polys_;
  ::google::protobuf::RepeatedField< double > times_;
  mutable int _times_cached_byte_size_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Spline* default_instance_;
};
// -------------------------------------------------------------------

class CtrlCmdVehicleTrajectory : public ::google::protobuf::Message {
 public:
  CtrlCmdVehicleTrajectory();
  virtual ~CtrlCmdVehicleTrajectory();
  
  CtrlCmdVehicleTrajectory(const CtrlCmdVehicleTrajectory& from);
  
  inline CtrlCmdVehicleTrajectory& operator=(const CtrlCmdVehicleTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlCmdVehicleTrajectory& default_instance();
  
  void Swap(CtrlCmdVehicleTrajectory* other);
  
  // implements Message ----------------------------------------------
  
  CtrlCmdVehicleTrajectory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlCmdVehicleTrajectory& from);
  void MergeFrom(const CtrlCmdVehicleTrajectory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required .prt.Spline spline = 2;
  inline bool has_spline() const;
  inline void clear_spline();
  static const int kSplineFieldNumber = 2;
  inline const ::prt::Spline& spline() const;
  inline ::prt::Spline* mutable_spline();
  
  // @@protoc_insertion_point(class_scope:prt.CtrlCmdVehicleTrajectory)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::prt::Spline* spline_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlCmdVehicleTrajectory* default_instance_;
};
// -------------------------------------------------------------------

class CtrlCmdVehicleItinerary : public ::google::protobuf::Message {
 public:
  CtrlCmdVehicleItinerary();
  virtual ~CtrlCmdVehicleItinerary();
  
  CtrlCmdVehicleItinerary(const CtrlCmdVehicleItinerary& from);
  
  inline CtrlCmdVehicleItinerary& operator=(const CtrlCmdVehicleItinerary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlCmdVehicleItinerary& default_instance();
  
  void Swap(CtrlCmdVehicleItinerary* other);
  
  // implements Message ----------------------------------------------
  
  CtrlCmdVehicleItinerary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlCmdVehicleItinerary& from);
  void MergeFrom(const CtrlCmdVehicleItinerary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // repeated int32 tsIDs = 2 [packed = true];
  inline int tsids_size() const;
  inline void clear_tsids();
  static const int kTsIDsFieldNumber = 2;
  inline ::google::protobuf::int32 tsids(int index) const;
  inline void set_tsids(int index, ::google::protobuf::int32 value);
  inline void add_tsids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tsids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tsids();
  
  // optional bool clear = 3;
  inline bool has_clear() const;
  inline void clear_clear();
  static const int kClearFieldNumber = 3;
  inline bool clear() const;
  inline void set_clear(bool value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlCmdVehicleItinerary)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tsids_;
  mutable int _tsids_cached_byte_size_;
  bool clear_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlCmdVehicleItinerary* default_instance_;
};
// -------------------------------------------------------------------

class CtrlCmdPassengersEmbark : public ::google::protobuf::Message {
 public:
  CtrlCmdPassengersEmbark();
  virtual ~CtrlCmdPassengersEmbark();
  
  CtrlCmdPassengersEmbark(const CtrlCmdPassengersEmbark& from);
  
  inline CtrlCmdPassengersEmbark& operator=(const CtrlCmdPassengersEmbark& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlCmdPassengersEmbark& default_instance();
  
  void Swap(CtrlCmdPassengersEmbark* other);
  
  // implements Message ----------------------------------------------
  
  CtrlCmdPassengersEmbark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlCmdPassengersEmbark& from);
  void MergeFrom(const CtrlCmdPassengersEmbark& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 berthID = 4;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 4;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // repeated int32 passengerIDs = 5 [packed = true];
  inline int passengerids_size() const;
  inline void clear_passengerids();
  static const int kPassengerIDsFieldNumber = 5;
  inline ::google::protobuf::int32 passengerids(int index) const;
  inline void set_passengerids(int index, ::google::protobuf::int32 value);
  inline void add_passengerids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passengerids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passengerids();
  
  // @@protoc_insertion_point(class_scope:prt.CtrlCmdPassengersEmbark)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 berthid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passengerids_;
  mutable int _passengerids_cached_byte_size_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlCmdPassengersEmbark* default_instance_;
};
// -------------------------------------------------------------------

class CtrlCmdPassengersDisembark : public ::google::protobuf::Message {
 public:
  CtrlCmdPassengersDisembark();
  virtual ~CtrlCmdPassengersDisembark();
  
  CtrlCmdPassengersDisembark(const CtrlCmdPassengersDisembark& from);
  
  inline CtrlCmdPassengersDisembark& operator=(const CtrlCmdPassengersDisembark& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlCmdPassengersDisembark& default_instance();
  
  void Swap(CtrlCmdPassengersDisembark* other);
  
  // implements Message ----------------------------------------------
  
  CtrlCmdPassengersDisembark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlCmdPassengersDisembark& from);
  void MergeFrom(const CtrlCmdPassengersDisembark& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 berthID = 4;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 4;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // repeated int32 passengerIDs = 5 [packed = true];
  inline int passengerids_size() const;
  inline void clear_passengerids();
  static const int kPassengerIDsFieldNumber = 5;
  inline ::google::protobuf::int32 passengerids(int index) const;
  inline void set_passengerids(int index, ::google::protobuf::int32 value);
  inline void add_passengerids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passengerids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passengerids();
  
  // @@protoc_insertion_point(class_scope:prt.CtrlCmdPassengersDisembark)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 berthid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passengerids_;
  mutable int _passengerids_cached_byte_size_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlCmdPassengersDisembark* default_instance_;
};
// -------------------------------------------------------------------

class CtrlCmdSwitch : public ::google::protobuf::Message {
 public:
  CtrlCmdSwitch();
  virtual ~CtrlCmdSwitch();
  
  CtrlCmdSwitch(const CtrlCmdSwitch& from);
  
  inline CtrlCmdSwitch& operator=(const CtrlCmdSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlCmdSwitch& default_instance();
  
  void Swap(CtrlCmdSwitch* other);
  
  // implements Message ----------------------------------------------
  
  CtrlCmdSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlCmdSwitch& from);
  void MergeFrom(const CtrlCmdSwitch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tsID = 1;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 1;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // required int32 nextID = 2;
  inline bool has_nextid() const;
  inline void clear_nextid();
  static const int kNextIDFieldNumber = 2;
  inline ::google::protobuf::int32 nextid() const;
  inline void set_nextid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlCmdSwitch)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tsid_;
  ::google::protobuf::int32 nextid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlCmdSwitch* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestVehicleStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestVehicleStatus();
  virtual ~CtrlRequestVehicleStatus();
  
  CtrlRequestVehicleStatus(const CtrlRequestVehicleStatus& from);
  
  inline CtrlRequestVehicleStatus& operator=(const CtrlRequestVehicleStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestVehicleStatus& default_instance();
  
  void Swap(CtrlRequestVehicleStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestVehicleStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestVehicleStatus& from);
  void MergeFrom(const CtrlRequestVehicleStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestVehicleStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestVehicleStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestStationStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestStationStatus();
  virtual ~CtrlRequestStationStatus();
  
  CtrlRequestStationStatus(const CtrlRequestStationStatus& from);
  
  inline CtrlRequestStationStatus& operator=(const CtrlRequestStationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestStationStatus& default_instance();
  
  void Swap(CtrlRequestStationStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestStationStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestStationStatus& from);
  void MergeFrom(const CtrlRequestStationStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestStationStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestStationStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestStationSummary : public ::google::protobuf::Message {
 public:
  CtrlRequestStationSummary();
  virtual ~CtrlRequestStationSummary();
  
  CtrlRequestStationSummary(const CtrlRequestStationSummary& from);
  
  inline CtrlRequestStationSummary& operator=(const CtrlRequestStationSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestStationSummary& default_instance();
  
  void Swap(CtrlRequestStationSummary* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestStationSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestStationSummary& from);
  void MergeFrom(const CtrlRequestStationSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestStationSummary)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestStationSummary* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestPassengerStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestPassengerStatus();
  virtual ~CtrlRequestPassengerStatus();
  
  CtrlRequestPassengerStatus(const CtrlRequestPassengerStatus& from);
  
  inline CtrlRequestPassengerStatus& operator=(const CtrlRequestPassengerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestPassengerStatus& default_instance();
  
  void Swap(CtrlRequestPassengerStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestPassengerStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestPassengerStatus& from);
  void MergeFrom(const CtrlRequestPassengerStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 pID = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 2;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestPassengerStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 pid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestPassengerStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestSwitchStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestSwitchStatus();
  virtual ~CtrlRequestSwitchStatus();
  
  CtrlRequestSwitchStatus(const CtrlRequestSwitchStatus& from);
  
  inline CtrlRequestSwitchStatus& operator=(const CtrlRequestSwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestSwitchStatus& default_instance();
  
  void Swap(CtrlRequestSwitchStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestSwitchStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestSwitchStatus& from);
  void MergeFrom(const CtrlRequestSwitchStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 swID = 2;
  inline bool has_swid() const;
  inline void clear_swid();
  static const int kSwIDFieldNumber = 2;
  inline ::google::protobuf::int32 swid() const;
  inline void set_swid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestSwitchStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 swid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestSwitchStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestTrackSegmentStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestTrackSegmentStatus();
  virtual ~CtrlRequestTrackSegmentStatus();
  
  CtrlRequestTrackSegmentStatus(const CtrlRequestTrackSegmentStatus& from);
  
  inline CtrlRequestTrackSegmentStatus& operator=(const CtrlRequestTrackSegmentStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestTrackSegmentStatus& default_instance();
  
  void Swap(CtrlRequestTrackSegmentStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestTrackSegmentStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestTrackSegmentStatus& from);
  void MergeFrom(const CtrlRequestTrackSegmentStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestTrackSegmentStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tsid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestTrackSegmentStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlRequestTotalStatus : public ::google::protobuf::Message {
 public:
  CtrlRequestTotalStatus();
  virtual ~CtrlRequestTotalStatus();
  
  CtrlRequestTotalStatus(const CtrlRequestTotalStatus& from);
  
  inline CtrlRequestTotalStatus& operator=(const CtrlRequestTotalStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlRequestTotalStatus& default_instance();
  
  void Swap(CtrlRequestTotalStatus* other);
  
  // implements Message ----------------------------------------------
  
  CtrlRequestTotalStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlRequestTotalStatus& from);
  void MergeFrom(const CtrlRequestTotalStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:prt.CtrlRequestTotalStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlRequestTotalStatus* default_instance_;
};
// -------------------------------------------------------------------

class CtrlSetnotifyVehiclePosition : public ::google::protobuf::Message {
 public:
  CtrlSetnotifyVehiclePosition();
  virtual ~CtrlSetnotifyVehiclePosition();
  
  CtrlSetnotifyVehiclePosition(const CtrlSetnotifyVehiclePosition& from);
  
  inline CtrlSetnotifyVehiclePosition& operator=(const CtrlSetnotifyVehiclePosition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlSetnotifyVehiclePosition& default_instance();
  
  void Swap(CtrlSetnotifyVehiclePosition* other);
  
  // implements Message ----------------------------------------------
  
  CtrlSetnotifyVehiclePosition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlSetnotifyVehiclePosition& from);
  void MergeFrom(const CtrlSetnotifyVehiclePosition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 tsID = 3;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 3;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // required int32 pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlSetnotifyVehiclePosition)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 tsid_;
  ::google::protobuf::int32 pos_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlSetnotifyVehiclePosition* default_instance_;
};
// -------------------------------------------------------------------

class CtrlSetnotifyTime : public ::google::protobuf::Message {
 public:
  CtrlSetnotifyTime();
  virtual ~CtrlSetnotifyTime();
  
  CtrlSetnotifyTime(const CtrlSetnotifyTime& from);
  
  inline CtrlSetnotifyTime& operator=(const CtrlSetnotifyTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlSetnotifyTime& default_instance();
  
  void Swap(CtrlSetnotifyTime* other);
  
  // implements Message ----------------------------------------------
  
  CtrlSetnotifyTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlSetnotifyTime& from);
  void MergeFrom(const CtrlSetnotifyTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline double time() const;
  inline void set_time(double value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlSetnotifyTime)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double time_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlSetnotifyTime* default_instance_;
};
// -------------------------------------------------------------------

class CtrlResume : public ::google::protobuf::Message {
 public:
  CtrlResume();
  virtual ~CtrlResume();
  
  CtrlResume(const CtrlResume& from);
  
  inline CtrlResume& operator=(const CtrlResume& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CtrlResume& default_instance();
  
  void Swap(CtrlResume* other);
  
  // implements Message ----------------------------------------------
  
  CtrlResume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CtrlResume& from);
  void MergeFrom(const CtrlResume& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 last_sim_msgID = 1;
  inline bool has_last_sim_msgid() const;
  inline void clear_last_sim_msgid();
  static const int kLastSimMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 last_sim_msgid() const;
  inline void set_last_sim_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.CtrlResume)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 last_sim_msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CtrlResume* default_instance_;
};
// -------------------------------------------------------------------

class SimGreeting : public ::google::protobuf::Message {
 public:
  SimGreeting();
  virtual ~SimGreeting();
  
  SimGreeting(const SimGreeting& from);
  
  inline SimGreeting& operator=(const SimGreeting& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimGreeting& default_instance();
  
  void Swap(SimGreeting* other);
  
  // implements Message ----------------------------------------------
  
  SimGreeting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimGreeting& from);
  void MergeFrom(const SimGreeting& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double sim_end_time = 1;
  inline bool has_sim_end_time() const;
  inline void clear_sim_end_time();
  static const int kSimEndTimeFieldNumber = 1;
  inline double sim_end_time() const;
  inline void set_sim_end_time(double value);
  
  // @@protoc_insertion_point(class_scope:prt.SimGreeting)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double sim_end_time_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimGreeting* default_instance_;
};
// -------------------------------------------------------------------

class SimStart : public ::google::protobuf::Message {
 public:
  SimStart();
  virtual ~SimStart();
  
  SimStart(const SimStart& from);
  
  inline SimStart& operator=(const SimStart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimStart& default_instance();
  
  void Swap(SimStart* other);
  
  // implements Message ----------------------------------------------
  
  SimStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimStart& from);
  void MergeFrom(const SimStart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:prt.SimStart)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimStart* default_instance_;
};
// -------------------------------------------------------------------

class SimEnd : public ::google::protobuf::Message {
 public:
  SimEnd();
  virtual ~SimEnd();
  
  SimEnd(const SimEnd& from);
  
  inline SimEnd& operator=(const SimEnd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEnd& default_instance();
  
  void Swap(SimEnd* other);
  
  // implements Message ----------------------------------------------
  
  SimEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEnd& from);
  void MergeFrom(const SimEnd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:prt.SimEnd)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEnd* default_instance_;
};
// -------------------------------------------------------------------

class SimUnimplemented : public ::google::protobuf::Message {
 public:
  SimUnimplemented();
  virtual ~SimUnimplemented();
  
  SimUnimplemented(const SimUnimplemented& from);
  
  inline SimUnimplemented& operator=(const SimUnimplemented& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimUnimplemented& default_instance();
  
  void Swap(SimUnimplemented* other);
  
  // implements Message ----------------------------------------------
  
  SimUnimplemented* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimUnimplemented& from);
  void MergeFrom(const SimUnimplemented& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimUnimplemented)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimUnimplemented* default_instance_;
};
// -------------------------------------------------------------------

class SimAbortVehicleSpeed : public ::google::protobuf::Message {
 public:
  SimAbortVehicleSpeed();
  virtual ~SimAbortVehicleSpeed();
  
  SimAbortVehicleSpeed(const SimAbortVehicleSpeed& from);
  
  inline SimAbortVehicleSpeed& operator=(const SimAbortVehicleSpeed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimAbortVehicleSpeed& default_instance();
  
  void Swap(SimAbortVehicleSpeed* other);
  
  // implements Message ----------------------------------------------
  
  SimAbortVehicleSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimAbortVehicleSpeed& from);
  void MergeFrom(const SimAbortVehicleSpeed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimAbortVehicleSpeed)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimAbortVehicleSpeed* default_instance_;
};
// -------------------------------------------------------------------

class SimCompletePassengerEmbark : public ::google::protobuf::Message {
 public:
  SimCompletePassengerEmbark();
  virtual ~SimCompletePassengerEmbark();
  
  SimCompletePassengerEmbark(const SimCompletePassengerEmbark& from);
  
  inline SimCompletePassengerEmbark& operator=(const SimCompletePassengerEmbark& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimCompletePassengerEmbark& default_instance();
  
  void Swap(SimCompletePassengerEmbark* other);
  
  // implements Message ----------------------------------------------
  
  SimCompletePassengerEmbark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimCompletePassengerEmbark& from);
  void MergeFrom(const SimCompletePassengerEmbark& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // optional .prt.CtrlCmdPassengersEmbark cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline const ::prt::CtrlCmdPassengersEmbark& cmd() const;
  inline ::prt::CtrlCmdPassengersEmbark* mutable_cmd();
  
  // @@protoc_insertion_point(class_scope:prt.SimCompletePassengerEmbark)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::CtrlCmdPassengersEmbark* cmd_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimCompletePassengerEmbark* default_instance_;
};
// -------------------------------------------------------------------

class SimCompletePassengerDisembark : public ::google::protobuf::Message {
 public:
  SimCompletePassengerDisembark();
  virtual ~SimCompletePassengerDisembark();
  
  SimCompletePassengerDisembark(const SimCompletePassengerDisembark& from);
  
  inline SimCompletePassengerDisembark& operator=(const SimCompletePassengerDisembark& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimCompletePassengerDisembark& default_instance();
  
  void Swap(SimCompletePassengerDisembark* other);
  
  // implements Message ----------------------------------------------
  
  SimCompletePassengerDisembark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimCompletePassengerDisembark& from);
  void MergeFrom(const SimCompletePassengerDisembark& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // optional .prt.CtrlCmdPassengersDisembark cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline const ::prt::CtrlCmdPassengersDisembark& cmd() const;
  inline ::prt::CtrlCmdPassengersDisembark* mutable_cmd();
  
  // @@protoc_insertion_point(class_scope:prt.SimCompletePassengerDisembark)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::CtrlCmdPassengersDisembark* cmd_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimCompletePassengerDisembark* default_instance_;
};
// -------------------------------------------------------------------

class SimCompleteSwitch : public ::google::protobuf::Message {
 public:
  SimCompleteSwitch();
  virtual ~SimCompleteSwitch();
  
  SimCompleteSwitch(const SimCompleteSwitch& from);
  
  inline SimCompleteSwitch& operator=(const SimCompleteSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimCompleteSwitch& default_instance();
  
  void Swap(SimCompleteSwitch* other);
  
  // implements Message ----------------------------------------------
  
  SimCompleteSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimCompleteSwitch& from);
  void MergeFrom(const SimCompleteSwitch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // required int32 nextID = 3;
  inline bool has_nextid() const;
  inline void clear_nextid();
  static const int kNextIDFieldNumber = 3;
  inline ::google::protobuf::int32 nextid() const;
  inline void set_nextid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimCompleteSwitch)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 tsid_;
  ::google::protobuf::int32 nextid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimCompleteSwitch* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseVehicleStatus : public ::google::protobuf::Message {
 public:
  SimResponseVehicleStatus();
  virtual ~SimResponseVehicleStatus();
  
  SimResponseVehicleStatus(const SimResponseVehicleStatus& from);
  
  inline SimResponseVehicleStatus& operator=(const SimResponseVehicleStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseVehicleStatus& default_instance();
  
  void Swap(SimResponseVehicleStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseVehicleStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseVehicleStatus& from);
  void MergeFrom(const SimResponseVehicleStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.VehicleStatus v_status = 2;
  inline bool has_v_status() const;
  inline void clear_v_status();
  static const int kVStatusFieldNumber = 2;
  inline const ::prt::VehicleStatus& v_status() const;
  inline ::prt::VehicleStatus* mutable_v_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseVehicleStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::VehicleStatus* v_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseVehicleStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseStationStatus : public ::google::protobuf::Message {
 public:
  SimResponseStationStatus();
  virtual ~SimResponseStationStatus();
  
  SimResponseStationStatus(const SimResponseStationStatus& from);
  
  inline SimResponseStationStatus& operator=(const SimResponseStationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseStationStatus& default_instance();
  
  void Swap(SimResponseStationStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseStationStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseStationStatus& from);
  void MergeFrom(const SimResponseStationStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.StationStatus s_status = 2;
  inline bool has_s_status() const;
  inline void clear_s_status();
  static const int kSStatusFieldNumber = 2;
  inline const ::prt::StationStatus& s_status() const;
  inline ::prt::StationStatus* mutable_s_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseStationStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::StationStatus* s_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseStationStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseStationSummary : public ::google::protobuf::Message {
 public:
  SimResponseStationSummary();
  virtual ~SimResponseStationSummary();
  
  SimResponseStationSummary(const SimResponseStationSummary& from);
  
  inline SimResponseStationSummary& operator=(const SimResponseStationSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseStationSummary& default_instance();
  
  void Swap(SimResponseStationSummary* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseStationSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseStationSummary& from);
  void MergeFrom(const SimResponseStationSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.StationSummary s_summary = 2;
  inline bool has_s_summary() const;
  inline void clear_s_summary();
  static const int kSSummaryFieldNumber = 2;
  inline const ::prt::StationSummary& s_summary() const;
  inline ::prt::StationSummary* mutable_s_summary();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseStationSummary)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::StationSummary* s_summary_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseStationSummary* default_instance_;
};
// -------------------------------------------------------------------

class SimResponsePassengerStatus : public ::google::protobuf::Message {
 public:
  SimResponsePassengerStatus();
  virtual ~SimResponsePassengerStatus();
  
  SimResponsePassengerStatus(const SimResponsePassengerStatus& from);
  
  inline SimResponsePassengerStatus& operator=(const SimResponsePassengerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponsePassengerStatus& default_instance();
  
  void Swap(SimResponsePassengerStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponsePassengerStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponsePassengerStatus& from);
  void MergeFrom(const SimResponsePassengerStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.PassengerStatus p_status = 2;
  inline bool has_p_status() const;
  inline void clear_p_status();
  static const int kPStatusFieldNumber = 2;
  inline const ::prt::PassengerStatus& p_status() const;
  inline ::prt::PassengerStatus* mutable_p_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponsePassengerStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::PassengerStatus* p_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponsePassengerStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseSwitchStatus : public ::google::protobuf::Message {
 public:
  SimResponseSwitchStatus();
  virtual ~SimResponseSwitchStatus();
  
  SimResponseSwitchStatus(const SimResponseSwitchStatus& from);
  
  inline SimResponseSwitchStatus& operator=(const SimResponseSwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseSwitchStatus& default_instance();
  
  void Swap(SimResponseSwitchStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseSwitchStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseSwitchStatus& from);
  void MergeFrom(const SimResponseSwitchStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.SwitchStatus sw_status = 2;
  inline bool has_sw_status() const;
  inline void clear_sw_status();
  static const int kSwStatusFieldNumber = 2;
  inline const ::prt::SwitchStatus& sw_status() const;
  inline ::prt::SwitchStatus* mutable_sw_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseSwitchStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::SwitchStatus* sw_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseSwitchStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseTrackSegmentStatus : public ::google::protobuf::Message {
 public:
  SimResponseTrackSegmentStatus();
  virtual ~SimResponseTrackSegmentStatus();
  
  SimResponseTrackSegmentStatus(const SimResponseTrackSegmentStatus& from);
  
  inline SimResponseTrackSegmentStatus& operator=(const SimResponseTrackSegmentStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseTrackSegmentStatus& default_instance();
  
  void Swap(SimResponseTrackSegmentStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseTrackSegmentStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseTrackSegmentStatus& from);
  void MergeFrom(const SimResponseTrackSegmentStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.TrackSegmentStatus ts_status = 2;
  inline bool has_ts_status() const;
  inline void clear_ts_status();
  static const int kTsStatusFieldNumber = 2;
  inline const ::prt::TrackSegmentStatus& ts_status() const;
  inline ::prt::TrackSegmentStatus* mutable_ts_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseTrackSegmentStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::prt::TrackSegmentStatus* ts_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseTrackSegmentStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimResponseTotalStatus : public ::google::protobuf::Message {
 public:
  SimResponseTotalStatus();
  virtual ~SimResponseTotalStatus();
  
  SimResponseTotalStatus(const SimResponseTotalStatus& from);
  
  inline SimResponseTotalStatus& operator=(const SimResponseTotalStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimResponseTotalStatus& default_instance();
  
  void Swap(SimResponseTotalStatus* other);
  
  // implements Message ----------------------------------------------
  
  SimResponseTotalStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimResponseTotalStatus& from);
  void MergeFrom(const SimResponseTotalStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // repeated .prt.VehicleStatus v_statuses = 2;
  inline int v_statuses_size() const;
  inline void clear_v_statuses();
  static const int kVStatusesFieldNumber = 2;
  inline const ::prt::VehicleStatus& v_statuses(int index) const;
  inline ::prt::VehicleStatus* mutable_v_statuses(int index);
  inline ::prt::VehicleStatus* add_v_statuses();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::VehicleStatus >&
      v_statuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::VehicleStatus >*
      mutable_v_statuses();
  
  // repeated .prt.StationStatus s_statuses = 3;
  inline int s_statuses_size() const;
  inline void clear_s_statuses();
  static const int kSStatusesFieldNumber = 3;
  inline const ::prt::StationStatus& s_statuses(int index) const;
  inline ::prt::StationStatus* mutable_s_statuses(int index);
  inline ::prt::StationStatus* add_s_statuses();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::StationStatus >&
      s_statuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::StationStatus >*
      mutable_s_statuses();
  
  // repeated .prt.PassengerStatus p_statuses = 4;
  inline int p_statuses_size() const;
  inline void clear_p_statuses();
  static const int kPStatusesFieldNumber = 4;
  inline const ::prt::PassengerStatus& p_statuses(int index) const;
  inline ::prt::PassengerStatus* mutable_p_statuses(int index);
  inline ::prt::PassengerStatus* add_p_statuses();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::PassengerStatus >&
      p_statuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::PassengerStatus >*
      mutable_p_statuses();
  
  // repeated .prt.SwitchStatus sw_statuses = 5;
  inline int sw_statuses_size() const;
  inline void clear_sw_statuses();
  static const int kSwStatusesFieldNumber = 5;
  inline const ::prt::SwitchStatus& sw_statuses(int index) const;
  inline ::prt::SwitchStatus* mutable_sw_statuses(int index);
  inline ::prt::SwitchStatus* add_sw_statuses();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::SwitchStatus >&
      sw_statuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::SwitchStatus >*
      mutable_sw_statuses();
  
  // repeated .prt.TrackSegmentStatus ts_statuses = 6;
  inline int ts_statuses_size() const;
  inline void clear_ts_statuses();
  static const int kTsStatusesFieldNumber = 6;
  inline const ::prt::TrackSegmentStatus& ts_statuses(int index) const;
  inline ::prt::TrackSegmentStatus* mutable_ts_statuses(int index);
  inline ::prt::TrackSegmentStatus* add_ts_statuses();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::TrackSegmentStatus >&
      ts_statuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::TrackSegmentStatus >*
      mutable_ts_statuses();
  
  // @@protoc_insertion_point(class_scope:prt.SimResponseTotalStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::RepeatedPtrField< ::prt::VehicleStatus > v_statuses_;
  ::google::protobuf::RepeatedPtrField< ::prt::StationStatus > s_statuses_;
  ::google::protobuf::RepeatedPtrField< ::prt::PassengerStatus > p_statuses_;
  ::google::protobuf::RepeatedPtrField< ::prt::SwitchStatus > sw_statuses_;
  ::google::protobuf::RepeatedPtrField< ::prt::TrackSegmentStatus > ts_statuses_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimResponseTotalStatus* default_instance_;
};
// -------------------------------------------------------------------

class SimRequestSwitchCmd : public ::google::protobuf::Message {
 public:
  SimRequestSwitchCmd();
  virtual ~SimRequestSwitchCmd();
  
  SimRequestSwitchCmd(const SimRequestSwitchCmd& from);
  
  inline SimRequestSwitchCmd& operator=(const SimRequestSwitchCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimRequestSwitchCmd& default_instance();
  
  void Swap(SimRequestSwitchCmd* other);
  
  // implements Message ----------------------------------------------
  
  SimRequestSwitchCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimRequestSwitchCmd& from);
  void MergeFrom(const SimRequestSwitchCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 swID = 1;
  inline bool has_swid() const;
  inline void clear_swid();
  static const int kSwIDFieldNumber = 1;
  inline ::google::protobuf::int32 swid() const;
  inline void set_swid(::google::protobuf::int32 value);
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 ts1ID = 3;
  inline bool has_ts1id() const;
  inline void clear_ts1id();
  static const int kTs1IDFieldNumber = 3;
  inline ::google::protobuf::int32 ts1id() const;
  inline void set_ts1id(::google::protobuf::int32 value);
  
  // required int32 ts2ID = 4;
  inline bool has_ts2id() const;
  inline void clear_ts2id();
  static const int kTs2IDFieldNumber = 4;
  inline ::google::protobuf::int32 ts2id() const;
  inline void set_ts2id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimRequestSwitchCmd)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 swid_;
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 ts1id_;
  ::google::protobuf::int32 ts2id_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimRequestSwitchCmd* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyVehiclePosition : public ::google::protobuf::Message {
 public:
  SimNotifyVehiclePosition();
  virtual ~SimNotifyVehiclePosition();
  
  SimNotifyVehiclePosition(const SimNotifyVehiclePosition& from);
  
  inline SimNotifyVehiclePosition& operator=(const SimNotifyVehiclePosition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyVehiclePosition& default_instance();
  
  void Swap(SimNotifyVehiclePosition* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyVehiclePosition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyVehiclePosition& from);
  void MergeFrom(const SimNotifyVehiclePosition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 tsID = 3;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 3;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // required int32 pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyVehiclePosition)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 tsid_;
  ::google::protobuf::int32 pos_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyVehiclePosition* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyTime : public ::google::protobuf::Message {
 public:
  SimNotifyTime();
  virtual ~SimNotifyTime();
  
  SimNotifyTime(const SimNotifyTime& from);
  
  inline SimNotifyTime& operator=(const SimNotifyTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyTime& default_instance();
  
  void Swap(SimNotifyTime* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyTime& from);
  void MergeFrom(const SimNotifyTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required double time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline double time() const;
  inline void set_time(double value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyTime)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  double time_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyTime* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyVehicleArrive : public ::google::protobuf::Message {
 public:
  SimNotifyVehicleArrive();
  virtual ~SimNotifyVehicleArrive();
  
  SimNotifyVehicleArrive(const SimNotifyVehicleArrive& from);
  
  inline SimNotifyVehicleArrive& operator=(const SimNotifyVehicleArrive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyVehicleArrive& default_instance();
  
  void Swap(SimNotifyVehicleArrive* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyVehicleArrive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyVehicleArrive& from);
  void MergeFrom(const SimNotifyVehicleArrive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .prt.VehicleStatus v_status = 1;
  inline bool has_v_status() const;
  inline void clear_v_status();
  static const int kVStatusFieldNumber = 1;
  inline const ::prt::VehicleStatus& v_status() const;
  inline ::prt::VehicleStatus* mutable_v_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyVehicleArrive)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::prt::VehicleStatus* v_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyVehicleArrive* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyVehicleExit : public ::google::protobuf::Message {
 public:
  SimNotifyVehicleExit();
  virtual ~SimNotifyVehicleExit();
  
  SimNotifyVehicleExit(const SimNotifyVehicleExit& from);
  
  inline SimNotifyVehicleExit& operator=(const SimNotifyVehicleExit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyVehicleExit& default_instance();
  
  void Swap(SimNotifyVehicleExit* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyVehicleExit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyVehicleExit& from);
  void MergeFrom(const SimNotifyVehicleExit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .prt.VehicleStatus v_status = 1;
  inline bool has_v_status() const;
  inline void clear_v_status();
  static const int kVStatusFieldNumber = 1;
  inline const ::prt::VehicleStatus& v_status() const;
  inline ::prt::VehicleStatus* mutable_v_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyVehicleExit)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::prt::VehicleStatus* v_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyVehicleExit* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyVehicleReadyLoad : public ::google::protobuf::Message {
 public:
  SimNotifyVehicleReadyLoad();
  virtual ~SimNotifyVehicleReadyLoad();
  
  SimNotifyVehicleReadyLoad(const SimNotifyVehicleReadyLoad& from);
  
  inline SimNotifyVehicleReadyLoad& operator=(const SimNotifyVehicleReadyLoad& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyVehicleReadyLoad& default_instance();
  
  void Swap(SimNotifyVehicleReadyLoad* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyVehicleReadyLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyVehicleReadyLoad& from);
  void MergeFrom(const SimNotifyVehicleReadyLoad& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyVehicleReadyLoad)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyVehicleReadyLoad* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyVehicleCollision : public ::google::protobuf::Message {
 public:
  SimNotifyVehicleCollision();
  virtual ~SimNotifyVehicleCollision();
  
  SimNotifyVehicleCollision(const SimNotifyVehicleCollision& from);
  
  inline SimNotifyVehicleCollision& operator=(const SimNotifyVehicleCollision& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyVehicleCollision& default_instance();
  
  void Swap(SimNotifyVehicleCollision* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyVehicleCollision* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyVehicleCollision& from);
  void MergeFrom(const SimNotifyVehicleCollision& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 v1ID = 1;
  inline bool has_v1id() const;
  inline void clear_v1id();
  static const int kV1IDFieldNumber = 1;
  inline ::google::protobuf::int32 v1id() const;
  inline void set_v1id(::google::protobuf::int32 value);
  
  // required int32 v2ID = 2;
  inline bool has_v2id() const;
  inline void clear_v2id();
  static const int kV2IDFieldNumber = 2;
  inline ::google::protobuf::int32 v2id() const;
  inline void set_v2id(::google::protobuf::int32 value);
  
  // required .prt.LocationType loc_type = 3;
  inline bool has_loc_type() const;
  inline void clear_loc_type();
  static const int kLocTypeFieldNumber = 3;
  inline prt::LocationType loc_type() const;
  inline void set_loc_type(prt::LocationType value);
  
  // required int32 locID = 4;
  inline bool has_locid() const;
  inline void clear_locid();
  static const int kLocIDFieldNumber = 4;
  inline ::google::protobuf::int32 locid() const;
  inline void set_locid(::google::protobuf::int32 value);
  
  // required int32 pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);
  
  // required int32 delta_v = 6;
  inline bool has_delta_v() const;
  inline void clear_delta_v();
  static const int kDeltaVFieldNumber = 6;
  inline ::google::protobuf::int32 delta_v() const;
  inline void set_delta_v(::google::protobuf::int32 value);
  
  // optional bool rearend = 7;
  inline bool has_rearend() const;
  inline void clear_rearend();
  static const int kRearendFieldNumber = 7;
  inline bool rearend() const;
  inline void set_rearend(bool value);
  
  // optional bool sideswipe = 8;
  inline bool has_sideswipe() const;
  inline void clear_sideswipe();
  static const int kSideswipeFieldNumber = 8;
  inline bool sideswipe() const;
  inline void set_sideswipe(bool value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyVehicleCollision)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 v1id_;
  ::google::protobuf::int32 v2id_;
  int loc_type_;
  ::google::protobuf::int32 locid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 delta_v_;
  bool rearend_;
  bool sideswipe_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyVehicleCollision* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyPassengerEmbarkStart : public ::google::protobuf::Message {
 public:
  SimNotifyPassengerEmbarkStart();
  virtual ~SimNotifyPassengerEmbarkStart();
  
  SimNotifyPassengerEmbarkStart(const SimNotifyPassengerEmbarkStart& from);
  
  inline SimNotifyPassengerEmbarkStart& operator=(const SimNotifyPassengerEmbarkStart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyPassengerEmbarkStart& default_instance();
  
  void Swap(SimNotifyPassengerEmbarkStart* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyPassengerEmbarkStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyPassengerEmbarkStart& from);
  void MergeFrom(const SimNotifyPassengerEmbarkStart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 pID = 4;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 4;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // required int32 berthID = 5;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 5;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyPassengerEmbarkStart)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 berthid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyPassengerEmbarkStart* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyPassengerEmbarkEnd : public ::google::protobuf::Message {
 public:
  SimNotifyPassengerEmbarkEnd();
  virtual ~SimNotifyPassengerEmbarkEnd();
  
  SimNotifyPassengerEmbarkEnd(const SimNotifyPassengerEmbarkEnd& from);
  
  inline SimNotifyPassengerEmbarkEnd& operator=(const SimNotifyPassengerEmbarkEnd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyPassengerEmbarkEnd& default_instance();
  
  void Swap(SimNotifyPassengerEmbarkEnd* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyPassengerEmbarkEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyPassengerEmbarkEnd& from);
  void MergeFrom(const SimNotifyPassengerEmbarkEnd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 pID = 4;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 4;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // required int32 berthID = 5;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 5;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyPassengerEmbarkEnd)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 berthid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyPassengerEmbarkEnd* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyPassengerDisembarkStart : public ::google::protobuf::Message {
 public:
  SimNotifyPassengerDisembarkStart();
  virtual ~SimNotifyPassengerDisembarkStart();
  
  SimNotifyPassengerDisembarkStart(const SimNotifyPassengerDisembarkStart& from);
  
  inline SimNotifyPassengerDisembarkStart& operator=(const SimNotifyPassengerDisembarkStart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyPassengerDisembarkStart& default_instance();
  
  void Swap(SimNotifyPassengerDisembarkStart* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyPassengerDisembarkStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyPassengerDisembarkStart& from);
  void MergeFrom(const SimNotifyPassengerDisembarkStart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 pID = 4;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 4;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // required int32 berthID = 5;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 5;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyPassengerDisembarkStart)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 berthid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyPassengerDisembarkStart* default_instance_;
};
// -------------------------------------------------------------------

class SimNotifyPassengerDisembarkEnd : public ::google::protobuf::Message {
 public:
  SimNotifyPassengerDisembarkEnd();
  virtual ~SimNotifyPassengerDisembarkEnd();
  
  SimNotifyPassengerDisembarkEnd(const SimNotifyPassengerDisembarkEnd& from);
  
  inline SimNotifyPassengerDisembarkEnd& operator=(const SimNotifyPassengerDisembarkEnd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNotifyPassengerDisembarkEnd& default_instance();
  
  void Swap(SimNotifyPassengerDisembarkEnd* other);
  
  // implements Message ----------------------------------------------
  
  SimNotifyPassengerDisembarkEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNotifyPassengerDisembarkEnd& from);
  void MergeFrom(const SimNotifyPassengerDisembarkEnd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // required int32 platformID = 3;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformIDFieldNumber = 3;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);
  
  // required int32 pID = 4;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 4;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // required int32 berthID = 5;
  inline bool has_berthid() const;
  inline void clear_berthid();
  static const int kBerthIDFieldNumber = 5;
  inline ::google::protobuf::int32 berthid() const;
  inline void set_berthid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimNotifyPassengerDisembarkEnd)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 berthid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimNotifyPassengerDisembarkEnd* default_instance_;
};
// -------------------------------------------------------------------

class SimEventTrackSegmentDisabled : public ::google::protobuf::Message {
 public:
  SimEventTrackSegmentDisabled();
  virtual ~SimEventTrackSegmentDisabled();
  
  SimEventTrackSegmentDisabled(const SimEventTrackSegmentDisabled& from);
  
  inline SimEventTrackSegmentDisabled& operator=(const SimEventTrackSegmentDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventTrackSegmentDisabled& default_instance();
  
  void Swap(SimEventTrackSegmentDisabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventTrackSegmentDisabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventTrackSegmentDisabled& from);
  void MergeFrom(const SimEventTrackSegmentDisabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventTrackSegmentDisabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tsid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventTrackSegmentDisabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventTrackSegmentReenabled : public ::google::protobuf::Message {
 public:
  SimEventTrackSegmentReenabled();
  virtual ~SimEventTrackSegmentReenabled();
  
  SimEventTrackSegmentReenabled(const SimEventTrackSegmentReenabled& from);
  
  inline SimEventTrackSegmentReenabled& operator=(const SimEventTrackSegmentReenabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventTrackSegmentReenabled& default_instance();
  
  void Swap(SimEventTrackSegmentReenabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventTrackSegmentReenabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventTrackSegmentReenabled& from);
  void MergeFrom(const SimEventTrackSegmentReenabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventTrackSegmentReenabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tsid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventTrackSegmentReenabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventSwitchDisabled : public ::google::protobuf::Message {
 public:
  SimEventSwitchDisabled();
  virtual ~SimEventSwitchDisabled();
  
  SimEventSwitchDisabled(const SimEventSwitchDisabled& from);
  
  inline SimEventSwitchDisabled& operator=(const SimEventSwitchDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventSwitchDisabled& default_instance();
  
  void Swap(SimEventSwitchDisabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventSwitchDisabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventSwitchDisabled& from);
  void MergeFrom(const SimEventSwitchDisabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 swID = 2;
  inline bool has_swid() const;
  inline void clear_swid();
  static const int kSwIDFieldNumber = 2;
  inline ::google::protobuf::int32 swid() const;
  inline void set_swid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventSwitchDisabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 swid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventSwitchDisabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventSwitchReenabled : public ::google::protobuf::Message {
 public:
  SimEventSwitchReenabled();
  virtual ~SimEventSwitchReenabled();
  
  SimEventSwitchReenabled(const SimEventSwitchReenabled& from);
  
  inline SimEventSwitchReenabled& operator=(const SimEventSwitchReenabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventSwitchReenabled& default_instance();
  
  void Swap(SimEventSwitchReenabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventSwitchReenabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventSwitchReenabled& from);
  void MergeFrom(const SimEventSwitchReenabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 swID = 2;
  inline bool has_swid() const;
  inline void clear_swid();
  static const int kSwIDFieldNumber = 2;
  inline ::google::protobuf::int32 swid() const;
  inline void set_swid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventSwitchReenabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 swid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventSwitchReenabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventStationDisabled : public ::google::protobuf::Message {
 public:
  SimEventStationDisabled();
  virtual ~SimEventStationDisabled();
  
  SimEventStationDisabled(const SimEventStationDisabled& from);
  
  inline SimEventStationDisabled& operator=(const SimEventStationDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventStationDisabled& default_instance();
  
  void Swap(SimEventStationDisabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventStationDisabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventStationDisabled& from);
  void MergeFrom(const SimEventStationDisabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventStationDisabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventStationDisabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventStationReenabled : public ::google::protobuf::Message {
 public:
  SimEventStationReenabled();
  virtual ~SimEventStationReenabled();
  
  SimEventStationReenabled(const SimEventStationReenabled& from);
  
  inline SimEventStationReenabled& operator=(const SimEventStationReenabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventStationReenabled& default_instance();
  
  void Swap(SimEventStationReenabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventStationReenabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventStationReenabled& from);
  void MergeFrom(const SimEventStationReenabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventStationReenabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventStationReenabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventVehicleDisabled : public ::google::protobuf::Message {
 public:
  SimEventVehicleDisabled();
  virtual ~SimEventVehicleDisabled();
  
  SimEventVehicleDisabled(const SimEventVehicleDisabled& from);
  
  inline SimEventVehicleDisabled& operator=(const SimEventVehicleDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventVehicleDisabled& default_instance();
  
  void Swap(SimEventVehicleDisabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventVehicleDisabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventVehicleDisabled& from);
  void MergeFrom(const SimEventVehicleDisabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventVehicleDisabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventVehicleDisabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventVehicleReenabled : public ::google::protobuf::Message {
 public:
  SimEventVehicleReenabled();
  virtual ~SimEventVehicleReenabled();
  
  SimEventVehicleReenabled(const SimEventVehicleReenabled& from);
  
  inline SimEventVehicleReenabled& operator=(const SimEventVehicleReenabled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventVehicleReenabled& default_instance();
  
  void Swap(SimEventVehicleReenabled* other);
  
  // implements Message ----------------------------------------------
  
  SimEventVehicleReenabled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventVehicleReenabled& from);
  void MergeFrom(const SimEventVehicleReenabled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventVehicleReenabled)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventVehicleReenabled* default_instance_;
};
// -------------------------------------------------------------------

class SimEventPassengerCreated : public ::google::protobuf::Message {
 public:
  SimEventPassengerCreated();
  virtual ~SimEventPassengerCreated();
  
  SimEventPassengerCreated(const SimEventPassengerCreated& from);
  
  inline SimEventPassengerCreated& operator=(const SimEventPassengerCreated& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventPassengerCreated& default_instance();
  
  void Swap(SimEventPassengerCreated* other);
  
  // implements Message ----------------------------------------------
  
  SimEventPassengerCreated* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventPassengerCreated& from);
  void MergeFrom(const SimEventPassengerCreated& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .prt.PassengerStatus p_status = 1;
  inline bool has_p_status() const;
  inline void clear_p_status();
  static const int kPStatusFieldNumber = 1;
  inline const ::prt::PassengerStatus& p_status() const;
  inline ::prt::PassengerStatus* mutable_p_status();
  
  // @@protoc_insertion_point(class_scope:prt.SimEventPassengerCreated)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::prt::PassengerStatus* p_status_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventPassengerCreated* default_instance_;
};
// -------------------------------------------------------------------

class SimEventPassengerChangedest : public ::google::protobuf::Message {
 public:
  SimEventPassengerChangedest();
  virtual ~SimEventPassengerChangedest();
  
  SimEventPassengerChangedest(const SimEventPassengerChangedest& from);
  
  inline SimEventPassengerChangedest& operator=(const SimEventPassengerChangedest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimEventPassengerChangedest& default_instance();
  
  void Swap(SimEventPassengerChangedest* other);
  
  // implements Message ----------------------------------------------
  
  SimEventPassengerChangedest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimEventPassengerChangedest& from);
  void MergeFrom(const SimEventPassengerChangedest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 pID = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 1;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimEventPassengerChangedest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 pid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimEventPassengerChangedest* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgHdrInvalidSeparator : public ::google::protobuf::Message {
 public:
  SimMsgHdrInvalidSeparator();
  virtual ~SimMsgHdrInvalidSeparator();
  
  SimMsgHdrInvalidSeparator(const SimMsgHdrInvalidSeparator& from);
  
  inline SimMsgHdrInvalidSeparator& operator=(const SimMsgHdrInvalidSeparator& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgHdrInvalidSeparator& default_instance();
  
  void Swap(SimMsgHdrInvalidSeparator* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgHdrInvalidSeparator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgHdrInvalidSeparator& from);
  void MergeFrom(const SimMsgHdrInvalidSeparator& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 msg_sep = 2;
  inline bool has_msg_sep() const;
  inline void clear_msg_sep();
  static const int kMsgSepFieldNumber = 2;
  inline ::google::protobuf::int32 msg_sep() const;
  inline void set_msg_sep(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgHdrInvalidSeparator)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 msg_sep_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgHdrInvalidSeparator* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgHdrInvalidType : public ::google::protobuf::Message {
 public:
  SimMsgHdrInvalidType();
  virtual ~SimMsgHdrInvalidType();
  
  SimMsgHdrInvalidType(const SimMsgHdrInvalidType& from);
  
  inline SimMsgHdrInvalidType& operator=(const SimMsgHdrInvalidType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgHdrInvalidType& default_instance();
  
  void Swap(SimMsgHdrInvalidType* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgHdrInvalidType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgHdrInvalidType& from);
  void MergeFrom(const SimMsgHdrInvalidType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 msg_type = 2;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::google::protobuf::int32 msg_type() const;
  inline void set_msg_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgHdrInvalidType)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 msg_type_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgHdrInvalidType* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgHdrInvalidID : public ::google::protobuf::Message {
 public:
  SimMsgHdrInvalidID();
  virtual ~SimMsgHdrInvalidID();
  
  SimMsgHdrInvalidID(const SimMsgHdrInvalidID& from);
  
  inline SimMsgHdrInvalidID& operator=(const SimMsgHdrInvalidID& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgHdrInvalidID& default_instance();
  
  void Swap(SimMsgHdrInvalidID* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgHdrInvalidID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgHdrInvalidID& from);
  void MergeFrom(const SimMsgHdrInvalidID& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgHdrInvalidID)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgHdrInvalidID* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgHdrInvalidTime : public ::google::protobuf::Message {
 public:
  SimMsgHdrInvalidTime();
  virtual ~SimMsgHdrInvalidTime();
  
  SimMsgHdrInvalidTime(const SimMsgHdrInvalidTime& from);
  
  inline SimMsgHdrInvalidTime& operator=(const SimMsgHdrInvalidTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgHdrInvalidTime& default_instance();
  
  void Swap(SimMsgHdrInvalidTime* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgHdrInvalidTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgHdrInvalidTime& from);
  void MergeFrom(const SimMsgHdrInvalidTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 msg_time = 2;
  inline bool has_msg_time() const;
  inline void clear_msg_time();
  static const int kMsgTimeFieldNumber = 2;
  inline ::google::protobuf::int32 msg_time() const;
  inline void set_msg_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgHdrInvalidTime)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 msg_time_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgHdrInvalidTime* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgHdrInvalidSize : public ::google::protobuf::Message {
 public:
  SimMsgHdrInvalidSize();
  virtual ~SimMsgHdrInvalidSize();
  
  SimMsgHdrInvalidSize(const SimMsgHdrInvalidSize& from);
  
  inline SimMsgHdrInvalidSize& operator=(const SimMsgHdrInvalidSize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgHdrInvalidSize& default_instance();
  
  void Swap(SimMsgHdrInvalidSize* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgHdrInvalidSize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgHdrInvalidSize& from);
  void MergeFrom(const SimMsgHdrInvalidSize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required int32 msg_size = 2;
  inline bool has_msg_size() const;
  inline void clear_msg_size();
  static const int kMsgSizeFieldNumber = 2;
  inline ::google::protobuf::int32 msg_size() const;
  inline void set_msg_size(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgHdrInvalidSize)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 msg_size_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgHdrInvalidSize* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgBodyInvalid : public ::google::protobuf::Message {
 public:
  SimMsgBodyInvalid();
  virtual ~SimMsgBodyInvalid();
  
  SimMsgBodyInvalid(const SimMsgBodyInvalid& from);
  
  inline SimMsgBodyInvalid& operator=(const SimMsgBodyInvalid& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgBodyInvalid& default_instance();
  
  void Swap(SimMsgBodyInvalid* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgBodyInvalid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgBodyInvalid& from);
  void MergeFrom(const SimMsgBodyInvalid& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgBodyInvalid)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgBodyInvalid* default_instance_;
};
// -------------------------------------------------------------------

class SimMsgBodyInvalidId : public ::google::protobuf::Message {
 public:
  SimMsgBodyInvalidId();
  virtual ~SimMsgBodyInvalidId();
  
  SimMsgBodyInvalidId(const SimMsgBodyInvalidId& from);
  
  inline SimMsgBodyInvalidId& operator=(const SimMsgBodyInvalidId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimMsgBodyInvalidId& default_instance();
  
  void Swap(SimMsgBodyInvalidId* other);
  
  // implements Message ----------------------------------------------
  
  SimMsgBodyInvalidId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimMsgBodyInvalidId& from);
  void MergeFrom(const SimMsgBodyInvalidId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 msgID = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // required .prt.LocationType id_type = 2;
  inline bool has_id_type() const;
  inline void clear_id_type();
  static const int kIdTypeFieldNumber = 2;
  inline prt::LocationType id_type() const;
  inline void set_id_type(prt::LocationType value);
  
  // required int32 ID = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.SimMsgBodyInvalidId)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msgid_;
  int id_type_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SimMsgBodyInvalidId* default_instance_;
};
// -------------------------------------------------------------------

class VehicleStatus : public ::google::protobuf::Message {
 public:
  VehicleStatus();
  virtual ~VehicleStatus();
  
  VehicleStatus(const VehicleStatus& from);
  
  inline VehicleStatus& operator=(const VehicleStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleStatus& default_instance();
  
  void Swap(VehicleStatus* other);
  
  // implements Message ----------------------------------------------
  
  VehicleStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VehicleStatus& from);
  void MergeFrom(const VehicleStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 nose_locID = 3;
  inline bool has_nose_locid() const;
  inline void clear_nose_locid();
  static const int kNoseLocIDFieldNumber = 3;
  inline ::google::protobuf::int32 nose_locid() const;
  inline void set_nose_locid(::google::protobuf::int32 value);
  
  // required float nose_pos = 4;
  inline bool has_nose_pos() const;
  inline void clear_nose_pos();
  static const int kNosePosFieldNumber = 4;
  inline float nose_pos() const;
  inline void set_nose_pos(float value);
  
  // required int32 tail_locID = 6;
  inline bool has_tail_locid() const;
  inline void clear_tail_locid();
  static const int kTailLocIDFieldNumber = 6;
  inline ::google::protobuf::int32 tail_locid() const;
  inline void set_tail_locid(::google::protobuf::int32 value);
  
  // required float tail_pos = 7;
  inline bool has_tail_pos() const;
  inline void clear_tail_pos();
  static const int kTailPosFieldNumber = 7;
  inline float tail_pos() const;
  inline void set_tail_pos(float value);
  
  // required float vel = 8;
  inline bool has_vel() const;
  inline void clear_vel();
  static const int kVelFieldNumber = 8;
  inline float vel() const;
  inline void set_vel(float value);
  
  // required float accel = 9;
  inline bool has_accel() const;
  inline void clear_accel();
  static const int kAccelFieldNumber = 9;
  inline float accel() const;
  inline void set_accel(float value);
  
  // repeated int32 passengerIDs = 10 [packed = true];
  inline int passengerids_size() const;
  inline void clear_passengerids();
  static const int kPassengerIDsFieldNumber = 10;
  inline ::google::protobuf::int32 passengerids(int index) const;
  inline void set_passengerids(int index, ::google::protobuf::int32 value);
  inline void add_passengerids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passengerids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passengerids();
  
  // optional int32 headway = 12;
  inline bool has_headway() const;
  inline void clear_headway();
  static const int kHeadwayFieldNumber = 12;
  inline ::google::protobuf::int32 headway() const;
  inline void set_headway(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.VehicleStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 nose_locid_;
  float nose_pos_;
  ::google::protobuf::int32 tail_locid_;
  float tail_pos_;
  float vel_;
  float accel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passengerids_;
  mutable int _passengerids_cached_byte_size_;
  ::google::protobuf::int32 headway_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static VehicleStatus* default_instance_;
};
// -------------------------------------------------------------------

class StationSummary : public ::google::protobuf::Message {
 public:
  StationSummary();
  virtual ~StationSummary();
  
  StationSummary(const StationSummary& from);
  
  inline StationSummary& operator=(const StationSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StationSummary& default_instance();
  
  void Swap(StationSummary* other);
  
  // implements Message ----------------------------------------------
  
  StationSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationSummary& from);
  void MergeFrom(const StationSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // repeated int32 loaded_ready_launch = 3 [packed = true];
  inline int loaded_ready_launch_size() const;
  inline void clear_loaded_ready_launch();
  static const int kLoadedReadyLaunchFieldNumber = 3;
  inline ::google::protobuf::int32 loaded_ready_launch(int index) const;
  inline void set_loaded_ready_launch(int index, ::google::protobuf::int32 value);
  inline void add_loaded_ready_launch(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      loaded_ready_launch() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_loaded_ready_launch();
  
  // repeated int32 unloaded_ready_launch = 4 [packed = true];
  inline int unloaded_ready_launch_size() const;
  inline void clear_unloaded_ready_launch();
  static const int kUnloadedReadyLaunchFieldNumber = 4;
  inline ::google::protobuf::int32 unloaded_ready_launch(int index) const;
  inline void set_unloaded_ready_launch(int index, ::google::protobuf::int32 value);
  inline void add_unloaded_ready_launch(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unloaded_ready_launch() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unloaded_ready_launch();
  
  // repeated int32 pID = 5 [packed = true];
  inline int pid_size() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 5;
  inline ::google::protobuf::int32 pid(int index) const;
  inline void set_pid(int index, ::google::protobuf::int32 value);
  inline void add_pid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pid();
  
  // required int32 next_accept_time = 6;
  inline bool has_next_accept_time() const;
  inline void clear_next_accept_time();
  static const int kNextAcceptTimeFieldNumber = 6;
  inline ::google::protobuf::int32 next_accept_time() const;
  inline void set_next_accept_time(::google::protobuf::int32 value);
  
  // required int32 vehicles_needed = 7;
  inline bool has_vehicles_needed() const;
  inline void clear_vehicles_needed();
  static const int kVehiclesNeededFieldNumber = 7;
  inline ::google::protobuf::int32 vehicles_needed() const;
  inline void set_vehicles_needed(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.StationSummary)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > loaded_ready_launch_;
  mutable int _loaded_ready_launch_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unloaded_ready_launch_;
  mutable int _unloaded_ready_launch_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pid_;
  mutable int _pid_cached_byte_size_;
  ::google::protobuf::int32 next_accept_time_;
  ::google::protobuf::int32 vehicles_needed_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StationSummary* default_instance_;
};
// -------------------------------------------------------------------

class StationStatus : public ::google::protobuf::Message {
 public:
  StationStatus();
  virtual ~StationStatus();
  
  StationStatus(const StationStatus& from);
  
  inline StationStatus& operator=(const StationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StationStatus& default_instance();
  
  void Swap(StationStatus* other);
  
  // implements Message ----------------------------------------------
  
  StationStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StationStatus& from);
  void MergeFrom(const StationStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 sID = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSIDFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // repeated .prt.PlatformStatus platform_status = 3;
  inline int platform_status_size() const;
  inline void clear_platform_status();
  static const int kPlatformStatusFieldNumber = 3;
  inline const ::prt::PlatformStatus& platform_status(int index) const;
  inline ::prt::PlatformStatus* mutable_platform_status(int index);
  inline ::prt::PlatformStatus* add_platform_status();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::PlatformStatus >&
      platform_status() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::PlatformStatus >*
      mutable_platform_status();
  
  // repeated int32 pID = 4 [packed = true];
  inline int pid_size() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 4;
  inline ::google::protobuf::int32 pid(int index) const;
  inline void set_pid(int index, ::google::protobuf::int32 value);
  inline void add_pid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pid();
  
  // required int32 v_adv_time = 5;
  inline bool has_v_adv_time() const;
  inline void clear_v_adv_time();
  static const int kVAdvTimeFieldNumber = 5;
  inline ::google::protobuf::int32 v_adv_time() const;
  inline void set_v_adv_time(::google::protobuf::int32 value);
  
  // required .prt.StationPolicy policy = 6;
  inline bool has_policy() const;
  inline void clear_policy();
  static const int kPolicyFieldNumber = 6;
  inline prt::StationPolicy policy() const;
  inline void set_policy(prt::StationPolicy value);
  
  // @@protoc_insertion_point(class_scope:prt.StationStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::google::protobuf::RepeatedPtrField< ::prt::PlatformStatus > platform_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pid_;
  mutable int _pid_cached_byte_size_;
  ::google::protobuf::int32 v_adv_time_;
  int policy_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StationStatus* default_instance_;
};
// -------------------------------------------------------------------

class PlatformStatus : public ::google::protobuf::Message {
 public:
  PlatformStatus();
  virtual ~PlatformStatus();
  
  PlatformStatus(const PlatformStatus& from);
  
  inline PlatformStatus& operator=(const PlatformStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformStatus& default_instance();
  
  void Swap(PlatformStatus* other);
  
  // implements Message ----------------------------------------------
  
  PlatformStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlatformStatus& from);
  void MergeFrom(const PlatformStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 platID = 1;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatIDFieldNumber = 1;
  inline ::google::protobuf::int32 platid() const;
  inline void set_platid(::google::protobuf::int32 value);
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // required bool unloading = 3;
  inline bool has_unloading() const;
  inline void clear_unloading();
  static const int kUnloadingFieldNumber = 3;
  inline bool unloading() const;
  inline void set_unloading(bool value);
  
  // required bool loading = 4;
  inline bool has_loading() const;
  inline void clear_loading();
  static const int kLoadingFieldNumber = 4;
  inline bool loading() const;
  inline void set_loading(bool value);
  
  // repeated .prt.BerthStatus berths = 5;
  inline int berths_size() const;
  inline void clear_berths();
  static const int kBerthsFieldNumber = 5;
  inline const ::prt::BerthStatus& berths(int index) const;
  inline ::prt::BerthStatus* mutable_berths(int index);
  inline ::prt::BerthStatus* add_berths();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::BerthStatus >&
      berths() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::BerthStatus >*
      mutable_berths();
  
  // @@protoc_insertion_point(class_scope:prt.PlatformStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 platid_;
  ::google::protobuf::int32 tsid_;
  bool unloading_;
  bool loading_;
  ::google::protobuf::RepeatedPtrField< ::prt::BerthStatus > berths_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PlatformStatus* default_instance_;
};
// -------------------------------------------------------------------

class BerthStatus : public ::google::protobuf::Message {
 public:
  BerthStatus();
  virtual ~BerthStatus();
  
  BerthStatus(const BerthStatus& from);
  
  inline BerthStatus& operator=(const BerthStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BerthStatus& default_instance();
  
  void Swap(BerthStatus* other);
  
  // implements Message ----------------------------------------------
  
  BerthStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BerthStatus& from);
  void MergeFrom(const BerthStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 bID = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBIDFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);
  
  // required int32 vID = 2;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 2;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required bool busy = 3;
  inline bool has_busy() const;
  inline void clear_busy();
  static const int kBusyFieldNumber = 3;
  inline bool busy() const;
  inline void set_busy(bool value);
  
  // @@protoc_insertion_point(class_scope:prt.BerthStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 vid_;
  bool busy_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BerthStatus* default_instance_;
};
// -------------------------------------------------------------------

class PassengerStatus : public ::google::protobuf::Message {
 public:
  PassengerStatus();
  virtual ~PassengerStatus();
  
  PassengerStatus(const PassengerStatus& from);
  
  inline PassengerStatus& operator=(const PassengerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PassengerStatus& default_instance();
  
  void Swap(PassengerStatus* other);
  
  // implements Message ----------------------------------------------
  
  PassengerStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassengerStatus& from);
  void MergeFrom(const PassengerStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 pID = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIDFieldNumber = 1;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // required .prt.LocationType loc_type = 3;
  inline bool has_loc_type() const;
  inline void clear_loc_type();
  static const int kLocTypeFieldNumber = 3;
  inline prt::LocationType loc_type() const;
  inline void set_loc_type(prt::LocationType value);
  
  // required int32 locID = 4;
  inline bool has_locid() const;
  inline void clear_locid();
  static const int kLocIDFieldNumber = 4;
  inline ::google::protobuf::int32 locid() const;
  inline void set_locid(::google::protobuf::int32 value);
  
  // required int32 src_stationID = 5;
  inline bool has_src_stationid() const;
  inline void clear_src_stationid();
  static const int kSrcStationIDFieldNumber = 5;
  inline ::google::protobuf::int32 src_stationid() const;
  inline void set_src_stationid(::google::protobuf::int32 value);
  
  // required int32 dest_stationID = 6;
  inline bool has_dest_stationid() const;
  inline void clear_dest_stationid();
  static const int kDestStationIDFieldNumber = 6;
  inline ::google::protobuf::int32 dest_stationid() const;
  inline void set_dest_stationid(::google::protobuf::int32 value);
  
  // required double creation_time = 7;
  inline bool has_creation_time() const;
  inline void clear_creation_time();
  static const int kCreationTimeFieldNumber = 7;
  inline double creation_time() const;
  inline void set_creation_time(double value);
  
  // optional float wait_time = 8;
  inline bool has_wait_time() const;
  inline void clear_wait_time();
  static const int kWaitTimeFieldNumber = 8;
  inline float wait_time() const;
  inline void set_wait_time(float value);
  
  // optional float travel_time = 9;
  inline bool has_travel_time() const;
  inline void clear_travel_time();
  static const int kTravelTimeFieldNumber = 9;
  inline float travel_time() const;
  inline void set_travel_time(float value);
  
  // optional int32 weight = 10;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 10;
  inline ::google::protobuf::int32 weight() const;
  inline void set_weight(::google::protobuf::int32 value);
  
  // optional bool trip_complete = 11;
  inline bool has_trip_complete() const;
  inline void clear_trip_complete();
  static const int kTripCompleteFieldNumber = 11;
  inline bool trip_complete() const;
  inline void set_trip_complete(bool value);
  
  // optional bool trip_success = 12;
  inline bool has_trip_success() const;
  inline void clear_trip_success();
  static const int kTripSuccessFieldNumber = 12;
  inline bool trip_success() const;
  inline void set_trip_success(bool value);
  
  // @@protoc_insertion_point(class_scope:prt.PassengerStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 pid_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  int loc_type_;
  ::google::protobuf::int32 locid_;
  ::google::protobuf::int32 src_stationid_;
  ::google::protobuf::int32 dest_stationid_;
  double creation_time_;
  float wait_time_;
  float travel_time_;
  ::google::protobuf::int32 weight_;
  bool trip_complete_;
  bool trip_success_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PassengerStatus* default_instance_;
};
// -------------------------------------------------------------------

class RoutingEntry : public ::google::protobuf::Message {
 public:
  RoutingEntry();
  virtual ~RoutingEntry();
  
  RoutingEntry(const RoutingEntry& from);
  
  inline RoutingEntry& operator=(const RoutingEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingEntry& default_instance();
  
  void Swap(RoutingEntry* other);
  
  // implements Message ----------------------------------------------
  
  RoutingEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoutingEntry& from);
  void MergeFrom(const RoutingEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 vID = 1;
  inline bool has_vid() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 1;
  inline ::google::protobuf::int32 vid() const;
  inline void set_vid(::google::protobuf::int32 value);
  
  // required int32 tsID = 2;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 2;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // optional int32 msgID = 3;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 3;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.RoutingEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 tsid_;
  ::google::protobuf::int32 msgid_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RoutingEntry* default_instance_;
};
// -------------------------------------------------------------------

class SwitchStatus : public ::google::protobuf::Message {
 public:
  SwitchStatus();
  virtual ~SwitchStatus();
  
  SwitchStatus(const SwitchStatus& from);
  
  inline SwitchStatus& operator=(const SwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchStatus& default_instance();
  
  void Swap(SwitchStatus* other);
  
  // implements Message ----------------------------------------------
  
  SwitchStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchStatus& from);
  void MergeFrom(const SwitchStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 swID = 1;
  inline bool has_swid() const;
  inline void clear_swid();
  static const int kSwIDFieldNumber = 1;
  inline ::google::protobuf::int32 swid() const;
  inline void set_swid(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // repeated .prt.RoutingEntry entry = 3;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 3;
  inline const ::prt::RoutingEntry& entry(int index) const;
  inline ::prt::RoutingEntry* mutable_entry(int index);
  inline ::prt::RoutingEntry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::prt::RoutingEntry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::prt::RoutingEntry >*
      mutable_entry();
  
  // @@protoc_insertion_point(class_scope:prt.SwitchStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 swid_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::google::protobuf::RepeatedPtrField< ::prt::RoutingEntry > entry_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SwitchStatus* default_instance_;
};
// -------------------------------------------------------------------

class TrackSegmentStatus : public ::google::protobuf::Message {
 public:
  TrackSegmentStatus();
  virtual ~TrackSegmentStatus();
  
  TrackSegmentStatus(const TrackSegmentStatus& from);
  
  inline TrackSegmentStatus& operator=(const TrackSegmentStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackSegmentStatus& default_instance();
  
  void Swap(TrackSegmentStatus* other);
  
  // implements Message ----------------------------------------------
  
  TrackSegmentStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackSegmentStatus& from);
  void MergeFrom(const TrackSegmentStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tsID = 1;
  inline bool has_tsid() const;
  inline void clear_tsid();
  static const int kTsIDFieldNumber = 1;
  inline ::google::protobuf::int32 tsid() const;
  inline void set_tsid(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  
  // required int32 max_speed = 3;
  inline bool has_max_speed() const;
  inline void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 3;
  inline ::google::protobuf::int32 max_speed() const;
  inline void set_max_speed(::google::protobuf::int32 value);
  
  // required int32 length = 4;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 4;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);
  
  // repeated int32 vID = 5 [packed = true];
  inline int vid_size() const;
  inline void clear_vid();
  static const int kVIDFieldNumber = 5;
  inline ::google::protobuf::int32 vid(int index) const;
  inline void set_vid(int index, ::google::protobuf::int32 value);
  inline void add_vid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vid();
  
  // required int32 next = 6;
  inline bool has_next() const;
  inline void clear_next();
  static const int kNextFieldNumber = 6;
  inline ::google::protobuf::int32 next() const;
  inline void set_next(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:prt.TrackSegmentStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tsid_;
  ::std::string* label_;
  static const ::std::string _default_label_;
  ::google::protobuf::int32 max_speed_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vid_;
  mutable int _vid_cached_byte_size_;
  ::google::protobuf::int32 next_;
  friend void  protobuf_AddDesc_api_2eproto();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TrackSegmentStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// PolyCoeffs

// repeated float coeffs = 1 [packed = true];
inline int PolyCoeffs::coeffs_size() const {
  return coeffs_.size();
}
inline void PolyCoeffs::clear_coeffs() {
  coeffs_.Clear();
}
inline float PolyCoeffs::coeffs(int index) const {
  return coeffs_.Get(index);
}
inline void PolyCoeffs::set_coeffs(int index, float value) {
  coeffs_.Set(index, value);
}
inline void PolyCoeffs::add_coeffs(float value) {
  coeffs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PolyCoeffs::coeffs() const {
  return coeffs_;
}
inline ::google::protobuf::RepeatedField< float >*
PolyCoeffs::mutable_coeffs() {
  return &coeffs_;
}

// -------------------------------------------------------------------

// Spline

// repeated .prt.PolyCoeffs polys = 1;
inline int Spline::polys_size() const {
  return polys_.size();
}
inline void Spline::clear_polys() {
  polys_.Clear();
}
inline const ::prt::PolyCoeffs& Spline::polys(int index) const {
  return polys_.Get(index);
}
inline ::prt::PolyCoeffs* Spline::mutable_polys(int index) {
  return polys_.Mutable(index);
}
inline ::prt::PolyCoeffs* Spline::add_polys() {
  return polys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::PolyCoeffs >&
Spline::polys() const {
  return polys_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::PolyCoeffs >*
Spline::mutable_polys() {
  return &polys_;
}

// repeated double times = 2 [packed = true];
inline int Spline::times_size() const {
  return times_.size();
}
inline void Spline::clear_times() {
  times_.Clear();
}
inline double Spline::times(int index) const {
  return times_.Get(index);
}
inline void Spline::set_times(int index, double value) {
  times_.Set(index, value);
}
inline void Spline::add_times(double value) {
  times_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
Spline::times() const {
  return times_;
}
inline ::google::protobuf::RepeatedField< double >*
Spline::mutable_times() {
  return &times_;
}

// -------------------------------------------------------------------

// CtrlCmdVehicleTrajectory

// required int32 vID = 1;
inline bool CtrlCmdVehicleTrajectory::has_vid() const {
  return _has_bit(0);
}
inline void CtrlCmdVehicleTrajectory::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlCmdVehicleTrajectory::vid() const {
  return vid_;
}
inline void CtrlCmdVehicleTrajectory::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required .prt.Spline spline = 2;
inline bool CtrlCmdVehicleTrajectory::has_spline() const {
  return _has_bit(1);
}
inline void CtrlCmdVehicleTrajectory::clear_spline() {
  if (spline_ != NULL) spline_->::prt::Spline::Clear();
  _clear_bit(1);
}
inline const ::prt::Spline& CtrlCmdVehicleTrajectory::spline() const {
  return spline_ != NULL ? *spline_ : *default_instance_->spline_;
}
inline ::prt::Spline* CtrlCmdVehicleTrajectory::mutable_spline() {
  _set_bit(1);
  if (spline_ == NULL) spline_ = new ::prt::Spline;
  return spline_;
}

// -------------------------------------------------------------------

// CtrlCmdVehicleItinerary

// required int32 vID = 1;
inline bool CtrlCmdVehicleItinerary::has_vid() const {
  return _has_bit(0);
}
inline void CtrlCmdVehicleItinerary::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlCmdVehicleItinerary::vid() const {
  return vid_;
}
inline void CtrlCmdVehicleItinerary::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// repeated int32 tsIDs = 2 [packed = true];
inline int CtrlCmdVehicleItinerary::tsids_size() const {
  return tsids_.size();
}
inline void CtrlCmdVehicleItinerary::clear_tsids() {
  tsids_.Clear();
}
inline ::google::protobuf::int32 CtrlCmdVehicleItinerary::tsids(int index) const {
  return tsids_.Get(index);
}
inline void CtrlCmdVehicleItinerary::set_tsids(int index, ::google::protobuf::int32 value) {
  tsids_.Set(index, value);
}
inline void CtrlCmdVehicleItinerary::add_tsids(::google::protobuf::int32 value) {
  tsids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CtrlCmdVehicleItinerary::tsids() const {
  return tsids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CtrlCmdVehicleItinerary::mutable_tsids() {
  return &tsids_;
}

// optional bool clear = 3;
inline bool CtrlCmdVehicleItinerary::has_clear() const {
  return _has_bit(2);
}
inline void CtrlCmdVehicleItinerary::clear_clear() {
  clear_ = false;
  _clear_bit(2);
}
inline bool CtrlCmdVehicleItinerary::clear() const {
  return clear_;
}
inline void CtrlCmdVehicleItinerary::set_clear(bool value) {
  _set_bit(2);
  clear_ = value;
}

// -------------------------------------------------------------------

// CtrlCmdPassengersEmbark

// required int32 vID = 1;
inline bool CtrlCmdPassengersEmbark::has_vid() const {
  return _has_bit(0);
}
inline void CtrlCmdPassengersEmbark::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlCmdPassengersEmbark::vid() const {
  return vid_;
}
inline void CtrlCmdPassengersEmbark::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool CtrlCmdPassengersEmbark::has_sid() const {
  return _has_bit(1);
}
inline void CtrlCmdPassengersEmbark::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CtrlCmdPassengersEmbark::sid() const {
  return sid_;
}
inline void CtrlCmdPassengersEmbark::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool CtrlCmdPassengersEmbark::has_platformid() const {
  return _has_bit(2);
}
inline void CtrlCmdPassengersEmbark::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CtrlCmdPassengersEmbark::platformid() const {
  return platformid_;
}
inline void CtrlCmdPassengersEmbark::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 berthID = 4;
inline bool CtrlCmdPassengersEmbark::has_berthid() const {
  return _has_bit(3);
}
inline void CtrlCmdPassengersEmbark::clear_berthid() {
  berthid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CtrlCmdPassengersEmbark::berthid() const {
  return berthid_;
}
inline void CtrlCmdPassengersEmbark::set_berthid(::google::protobuf::int32 value) {
  _set_bit(3);
  berthid_ = value;
}

// repeated int32 passengerIDs = 5 [packed = true];
inline int CtrlCmdPassengersEmbark::passengerids_size() const {
  return passengerids_.size();
}
inline void CtrlCmdPassengersEmbark::clear_passengerids() {
  passengerids_.Clear();
}
inline ::google::protobuf::int32 CtrlCmdPassengersEmbark::passengerids(int index) const {
  return passengerids_.Get(index);
}
inline void CtrlCmdPassengersEmbark::set_passengerids(int index, ::google::protobuf::int32 value) {
  passengerids_.Set(index, value);
}
inline void CtrlCmdPassengersEmbark::add_passengerids(::google::protobuf::int32 value) {
  passengerids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CtrlCmdPassengersEmbark::passengerids() const {
  return passengerids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CtrlCmdPassengersEmbark::mutable_passengerids() {
  return &passengerids_;
}

// -------------------------------------------------------------------

// CtrlCmdPassengersDisembark

// required int32 vID = 1;
inline bool CtrlCmdPassengersDisembark::has_vid() const {
  return _has_bit(0);
}
inline void CtrlCmdPassengersDisembark::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlCmdPassengersDisembark::vid() const {
  return vid_;
}
inline void CtrlCmdPassengersDisembark::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool CtrlCmdPassengersDisembark::has_sid() const {
  return _has_bit(1);
}
inline void CtrlCmdPassengersDisembark::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CtrlCmdPassengersDisembark::sid() const {
  return sid_;
}
inline void CtrlCmdPassengersDisembark::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool CtrlCmdPassengersDisembark::has_platformid() const {
  return _has_bit(2);
}
inline void CtrlCmdPassengersDisembark::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CtrlCmdPassengersDisembark::platformid() const {
  return platformid_;
}
inline void CtrlCmdPassengersDisembark::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 berthID = 4;
inline bool CtrlCmdPassengersDisembark::has_berthid() const {
  return _has_bit(3);
}
inline void CtrlCmdPassengersDisembark::clear_berthid() {
  berthid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CtrlCmdPassengersDisembark::berthid() const {
  return berthid_;
}
inline void CtrlCmdPassengersDisembark::set_berthid(::google::protobuf::int32 value) {
  _set_bit(3);
  berthid_ = value;
}

// repeated int32 passengerIDs = 5 [packed = true];
inline int CtrlCmdPassengersDisembark::passengerids_size() const {
  return passengerids_.size();
}
inline void CtrlCmdPassengersDisembark::clear_passengerids() {
  passengerids_.Clear();
}
inline ::google::protobuf::int32 CtrlCmdPassengersDisembark::passengerids(int index) const {
  return passengerids_.Get(index);
}
inline void CtrlCmdPassengersDisembark::set_passengerids(int index, ::google::protobuf::int32 value) {
  passengerids_.Set(index, value);
}
inline void CtrlCmdPassengersDisembark::add_passengerids(::google::protobuf::int32 value) {
  passengerids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CtrlCmdPassengersDisembark::passengerids() const {
  return passengerids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CtrlCmdPassengersDisembark::mutable_passengerids() {
  return &passengerids_;
}

// -------------------------------------------------------------------

// CtrlCmdSwitch

// required int32 tsID = 1;
inline bool CtrlCmdSwitch::has_tsid() const {
  return _has_bit(0);
}
inline void CtrlCmdSwitch::clear_tsid() {
  tsid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlCmdSwitch::tsid() const {
  return tsid_;
}
inline void CtrlCmdSwitch::set_tsid(::google::protobuf::int32 value) {
  _set_bit(0);
  tsid_ = value;
}

// required int32 nextID = 2;
inline bool CtrlCmdSwitch::has_nextid() const {
  return _has_bit(1);
}
inline void CtrlCmdSwitch::clear_nextid() {
  nextid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CtrlCmdSwitch::nextid() const {
  return nextid_;
}
inline void CtrlCmdSwitch::set_nextid(::google::protobuf::int32 value) {
  _set_bit(1);
  nextid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestVehicleStatus

// required int32 vID = 2;
inline bool CtrlRequestVehicleStatus::has_vid() const {
  return _has_bit(0);
}
inline void CtrlRequestVehicleStatus::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestVehicleStatus::vid() const {
  return vid_;
}
inline void CtrlRequestVehicleStatus::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestStationStatus

// required int32 sID = 2;
inline bool CtrlRequestStationStatus::has_sid() const {
  return _has_bit(0);
}
inline void CtrlRequestStationStatus::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestStationStatus::sid() const {
  return sid_;
}
inline void CtrlRequestStationStatus::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestStationSummary

// required int32 sID = 2;
inline bool CtrlRequestStationSummary::has_sid() const {
  return _has_bit(0);
}
inline void CtrlRequestStationSummary::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestStationSummary::sid() const {
  return sid_;
}
inline void CtrlRequestStationSummary::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestPassengerStatus

// required int32 pID = 2;
inline bool CtrlRequestPassengerStatus::has_pid() const {
  return _has_bit(0);
}
inline void CtrlRequestPassengerStatus::clear_pid() {
  pid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestPassengerStatus::pid() const {
  return pid_;
}
inline void CtrlRequestPassengerStatus::set_pid(::google::protobuf::int32 value) {
  _set_bit(0);
  pid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestSwitchStatus

// required int32 swID = 2;
inline bool CtrlRequestSwitchStatus::has_swid() const {
  return _has_bit(0);
}
inline void CtrlRequestSwitchStatus::clear_swid() {
  swid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestSwitchStatus::swid() const {
  return swid_;
}
inline void CtrlRequestSwitchStatus::set_swid(::google::protobuf::int32 value) {
  _set_bit(0);
  swid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestTrackSegmentStatus

// required int32 tsID = 2;
inline bool CtrlRequestTrackSegmentStatus::has_tsid() const {
  return _has_bit(0);
}
inline void CtrlRequestTrackSegmentStatus::clear_tsid() {
  tsid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlRequestTrackSegmentStatus::tsid() const {
  return tsid_;
}
inline void CtrlRequestTrackSegmentStatus::set_tsid(::google::protobuf::int32 value) {
  _set_bit(0);
  tsid_ = value;
}

// -------------------------------------------------------------------

// CtrlRequestTotalStatus

// -------------------------------------------------------------------

// CtrlSetnotifyVehiclePosition

// required int32 vID = 2;
inline bool CtrlSetnotifyVehiclePosition::has_vid() const {
  return _has_bit(0);
}
inline void CtrlSetnotifyVehiclePosition::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlSetnotifyVehiclePosition::vid() const {
  return vid_;
}
inline void CtrlSetnotifyVehiclePosition::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 tsID = 3;
inline bool CtrlSetnotifyVehiclePosition::has_tsid() const {
  return _has_bit(1);
}
inline void CtrlSetnotifyVehiclePosition::clear_tsid() {
  tsid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CtrlSetnotifyVehiclePosition::tsid() const {
  return tsid_;
}
inline void CtrlSetnotifyVehiclePosition::set_tsid(::google::protobuf::int32 value) {
  _set_bit(1);
  tsid_ = value;
}

// required int32 pos = 4;
inline bool CtrlSetnotifyVehiclePosition::has_pos() const {
  return _has_bit(2);
}
inline void CtrlSetnotifyVehiclePosition::clear_pos() {
  pos_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CtrlSetnotifyVehiclePosition::pos() const {
  return pos_;
}
inline void CtrlSetnotifyVehiclePosition::set_pos(::google::protobuf::int32 value) {
  _set_bit(2);
  pos_ = value;
}

// -------------------------------------------------------------------

// CtrlSetnotifyTime

// required double time = 1;
inline bool CtrlSetnotifyTime::has_time() const {
  return _has_bit(0);
}
inline void CtrlSetnotifyTime::clear_time() {
  time_ = 0;
  _clear_bit(0);
}
inline double CtrlSetnotifyTime::time() const {
  return time_;
}
inline void CtrlSetnotifyTime::set_time(double value) {
  _set_bit(0);
  time_ = value;
}

// -------------------------------------------------------------------

// CtrlResume

// required int32 last_sim_msgID = 1;
inline bool CtrlResume::has_last_sim_msgid() const {
  return _has_bit(0);
}
inline void CtrlResume::clear_last_sim_msgid() {
  last_sim_msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CtrlResume::last_sim_msgid() const {
  return last_sim_msgid_;
}
inline void CtrlResume::set_last_sim_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  last_sim_msgid_ = value;
}

// -------------------------------------------------------------------

// SimGreeting

// required double sim_end_time = 1;
inline bool SimGreeting::has_sim_end_time() const {
  return _has_bit(0);
}
inline void SimGreeting::clear_sim_end_time() {
  sim_end_time_ = 0;
  _clear_bit(0);
}
inline double SimGreeting::sim_end_time() const {
  return sim_end_time_;
}
inline void SimGreeting::set_sim_end_time(double value) {
  _set_bit(0);
  sim_end_time_ = value;
}

// -------------------------------------------------------------------

// SimStart

// -------------------------------------------------------------------

// SimEnd

// -------------------------------------------------------------------

// SimUnimplemented

// required int32 msgID = 1;
inline bool SimUnimplemented::has_msgid() const {
  return _has_bit(0);
}
inline void SimUnimplemented::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimUnimplemented::msgid() const {
  return msgid_;
}
inline void SimUnimplemented::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// -------------------------------------------------------------------

// SimAbortVehicleSpeed

// required int32 msgID = 1;
inline bool SimAbortVehicleSpeed::has_msgid() const {
  return _has_bit(0);
}
inline void SimAbortVehicleSpeed::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimAbortVehicleSpeed::msgid() const {
  return msgid_;
}
inline void SimAbortVehicleSpeed::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// -------------------------------------------------------------------

// SimCompletePassengerEmbark

// required int32 msgID = 1;
inline bool SimCompletePassengerEmbark::has_msgid() const {
  return _has_bit(0);
}
inline void SimCompletePassengerEmbark::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimCompletePassengerEmbark::msgid() const {
  return msgid_;
}
inline void SimCompletePassengerEmbark::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// optional .prt.CtrlCmdPassengersEmbark cmd = 2;
inline bool SimCompletePassengerEmbark::has_cmd() const {
  return _has_bit(1);
}
inline void SimCompletePassengerEmbark::clear_cmd() {
  if (cmd_ != NULL) cmd_->::prt::CtrlCmdPassengersEmbark::Clear();
  _clear_bit(1);
}
inline const ::prt::CtrlCmdPassengersEmbark& SimCompletePassengerEmbark::cmd() const {
  return cmd_ != NULL ? *cmd_ : *default_instance_->cmd_;
}
inline ::prt::CtrlCmdPassengersEmbark* SimCompletePassengerEmbark::mutable_cmd() {
  _set_bit(1);
  if (cmd_ == NULL) cmd_ = new ::prt::CtrlCmdPassengersEmbark;
  return cmd_;
}

// -------------------------------------------------------------------

// SimCompletePassengerDisembark

// required int32 msgID = 1;
inline bool SimCompletePassengerDisembark::has_msgid() const {
  return _has_bit(0);
}
inline void SimCompletePassengerDisembark::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimCompletePassengerDisembark::msgid() const {
  return msgid_;
}
inline void SimCompletePassengerDisembark::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// optional .prt.CtrlCmdPassengersDisembark cmd = 2;
inline bool SimCompletePassengerDisembark::has_cmd() const {
  return _has_bit(1);
}
inline void SimCompletePassengerDisembark::clear_cmd() {
  if (cmd_ != NULL) cmd_->::prt::CtrlCmdPassengersDisembark::Clear();
  _clear_bit(1);
}
inline const ::prt::CtrlCmdPassengersDisembark& SimCompletePassengerDisembark::cmd() const {
  return cmd_ != NULL ? *cmd_ : *default_instance_->cmd_;
}
inline ::prt::CtrlCmdPassengersDisembark* SimCompletePassengerDisembark::mutable_cmd() {
  _set_bit(1);
  if (cmd_ == NULL) cmd_ = new ::prt::CtrlCmdPassengersDisembark;
  return cmd_;
}

// -------------------------------------------------------------------

// SimCompleteSwitch

// required int32 msgID = 1;
inline bool SimCompleteSwitch::has_msgid() const {
  return _has_bit(0);
}
inline void SimCompleteSwitch::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimCompleteSwitch::msgid() const {
  return msgid_;
}
inline void SimCompleteSwitch::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 tsID = 2;
inline bool SimCompleteSwitch::has_tsid() const {
  return _has_bit(1);
}
inline void SimCompleteSwitch::clear_tsid() {
  tsid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimCompleteSwitch::tsid() const {
  return tsid_;
}
inline void SimCompleteSwitch::set_tsid(::google::protobuf::int32 value) {
  _set_bit(1);
  tsid_ = value;
}

// required int32 nextID = 3;
inline bool SimCompleteSwitch::has_nextid() const {
  return _has_bit(2);
}
inline void SimCompleteSwitch::clear_nextid() {
  nextid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimCompleteSwitch::nextid() const {
  return nextid_;
}
inline void SimCompleteSwitch::set_nextid(::google::protobuf::int32 value) {
  _set_bit(2);
  nextid_ = value;
}

// -------------------------------------------------------------------

// SimResponseVehicleStatus

// optional int32 msgID = 1;
inline bool SimResponseVehicleStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseVehicleStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseVehicleStatus::msgid() const {
  return msgid_;
}
inline void SimResponseVehicleStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.VehicleStatus v_status = 2;
inline bool SimResponseVehicleStatus::has_v_status() const {
  return _has_bit(1);
}
inline void SimResponseVehicleStatus::clear_v_status() {
  if (v_status_ != NULL) v_status_->::prt::VehicleStatus::Clear();
  _clear_bit(1);
}
inline const ::prt::VehicleStatus& SimResponseVehicleStatus::v_status() const {
  return v_status_ != NULL ? *v_status_ : *default_instance_->v_status_;
}
inline ::prt::VehicleStatus* SimResponseVehicleStatus::mutable_v_status() {
  _set_bit(1);
  if (v_status_ == NULL) v_status_ = new ::prt::VehicleStatus;
  return v_status_;
}

// -------------------------------------------------------------------

// SimResponseStationStatus

// optional int32 msgID = 1;
inline bool SimResponseStationStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseStationStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseStationStatus::msgid() const {
  return msgid_;
}
inline void SimResponseStationStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.StationStatus s_status = 2;
inline bool SimResponseStationStatus::has_s_status() const {
  return _has_bit(1);
}
inline void SimResponseStationStatus::clear_s_status() {
  if (s_status_ != NULL) s_status_->::prt::StationStatus::Clear();
  _clear_bit(1);
}
inline const ::prt::StationStatus& SimResponseStationStatus::s_status() const {
  return s_status_ != NULL ? *s_status_ : *default_instance_->s_status_;
}
inline ::prt::StationStatus* SimResponseStationStatus::mutable_s_status() {
  _set_bit(1);
  if (s_status_ == NULL) s_status_ = new ::prt::StationStatus;
  return s_status_;
}

// -------------------------------------------------------------------

// SimResponseStationSummary

// optional int32 msgID = 1;
inline bool SimResponseStationSummary::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseStationSummary::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseStationSummary::msgid() const {
  return msgid_;
}
inline void SimResponseStationSummary::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.StationSummary s_summary = 2;
inline bool SimResponseStationSummary::has_s_summary() const {
  return _has_bit(1);
}
inline void SimResponseStationSummary::clear_s_summary() {
  if (s_summary_ != NULL) s_summary_->::prt::StationSummary::Clear();
  _clear_bit(1);
}
inline const ::prt::StationSummary& SimResponseStationSummary::s_summary() const {
  return s_summary_ != NULL ? *s_summary_ : *default_instance_->s_summary_;
}
inline ::prt::StationSummary* SimResponseStationSummary::mutable_s_summary() {
  _set_bit(1);
  if (s_summary_ == NULL) s_summary_ = new ::prt::StationSummary;
  return s_summary_;
}

// -------------------------------------------------------------------

// SimResponsePassengerStatus

// optional int32 msgID = 1;
inline bool SimResponsePassengerStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponsePassengerStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponsePassengerStatus::msgid() const {
  return msgid_;
}
inline void SimResponsePassengerStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.PassengerStatus p_status = 2;
inline bool SimResponsePassengerStatus::has_p_status() const {
  return _has_bit(1);
}
inline void SimResponsePassengerStatus::clear_p_status() {
  if (p_status_ != NULL) p_status_->::prt::PassengerStatus::Clear();
  _clear_bit(1);
}
inline const ::prt::PassengerStatus& SimResponsePassengerStatus::p_status() const {
  return p_status_ != NULL ? *p_status_ : *default_instance_->p_status_;
}
inline ::prt::PassengerStatus* SimResponsePassengerStatus::mutable_p_status() {
  _set_bit(1);
  if (p_status_ == NULL) p_status_ = new ::prt::PassengerStatus;
  return p_status_;
}

// -------------------------------------------------------------------

// SimResponseSwitchStatus

// optional int32 msgID = 1;
inline bool SimResponseSwitchStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseSwitchStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseSwitchStatus::msgid() const {
  return msgid_;
}
inline void SimResponseSwitchStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.SwitchStatus sw_status = 2;
inline bool SimResponseSwitchStatus::has_sw_status() const {
  return _has_bit(1);
}
inline void SimResponseSwitchStatus::clear_sw_status() {
  if (sw_status_ != NULL) sw_status_->::prt::SwitchStatus::Clear();
  _clear_bit(1);
}
inline const ::prt::SwitchStatus& SimResponseSwitchStatus::sw_status() const {
  return sw_status_ != NULL ? *sw_status_ : *default_instance_->sw_status_;
}
inline ::prt::SwitchStatus* SimResponseSwitchStatus::mutable_sw_status() {
  _set_bit(1);
  if (sw_status_ == NULL) sw_status_ = new ::prt::SwitchStatus;
  return sw_status_;
}

// -------------------------------------------------------------------

// SimResponseTrackSegmentStatus

// optional int32 msgID = 1;
inline bool SimResponseTrackSegmentStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseTrackSegmentStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseTrackSegmentStatus::msgid() const {
  return msgid_;
}
inline void SimResponseTrackSegmentStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.TrackSegmentStatus ts_status = 2;
inline bool SimResponseTrackSegmentStatus::has_ts_status() const {
  return _has_bit(1);
}
inline void SimResponseTrackSegmentStatus::clear_ts_status() {
  if (ts_status_ != NULL) ts_status_->::prt::TrackSegmentStatus::Clear();
  _clear_bit(1);
}
inline const ::prt::TrackSegmentStatus& SimResponseTrackSegmentStatus::ts_status() const {
  return ts_status_ != NULL ? *ts_status_ : *default_instance_->ts_status_;
}
inline ::prt::TrackSegmentStatus* SimResponseTrackSegmentStatus::mutable_ts_status() {
  _set_bit(1);
  if (ts_status_ == NULL) ts_status_ = new ::prt::TrackSegmentStatus;
  return ts_status_;
}

// -------------------------------------------------------------------

// SimResponseTotalStatus

// optional int32 msgID = 1;
inline bool SimResponseTotalStatus::has_msgid() const {
  return _has_bit(0);
}
inline void SimResponseTotalStatus::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimResponseTotalStatus::msgid() const {
  return msgid_;
}
inline void SimResponseTotalStatus::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// repeated .prt.VehicleStatus v_statuses = 2;
inline int SimResponseTotalStatus::v_statuses_size() const {
  return v_statuses_.size();
}
inline void SimResponseTotalStatus::clear_v_statuses() {
  v_statuses_.Clear();
}
inline const ::prt::VehicleStatus& SimResponseTotalStatus::v_statuses(int index) const {
  return v_statuses_.Get(index);
}
inline ::prt::VehicleStatus* SimResponseTotalStatus::mutable_v_statuses(int index) {
  return v_statuses_.Mutable(index);
}
inline ::prt::VehicleStatus* SimResponseTotalStatus::add_v_statuses() {
  return v_statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::VehicleStatus >&
SimResponseTotalStatus::v_statuses() const {
  return v_statuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::VehicleStatus >*
SimResponseTotalStatus::mutable_v_statuses() {
  return &v_statuses_;
}

// repeated .prt.StationStatus s_statuses = 3;
inline int SimResponseTotalStatus::s_statuses_size() const {
  return s_statuses_.size();
}
inline void SimResponseTotalStatus::clear_s_statuses() {
  s_statuses_.Clear();
}
inline const ::prt::StationStatus& SimResponseTotalStatus::s_statuses(int index) const {
  return s_statuses_.Get(index);
}
inline ::prt::StationStatus* SimResponseTotalStatus::mutable_s_statuses(int index) {
  return s_statuses_.Mutable(index);
}
inline ::prt::StationStatus* SimResponseTotalStatus::add_s_statuses() {
  return s_statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::StationStatus >&
SimResponseTotalStatus::s_statuses() const {
  return s_statuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::StationStatus >*
SimResponseTotalStatus::mutable_s_statuses() {
  return &s_statuses_;
}

// repeated .prt.PassengerStatus p_statuses = 4;
inline int SimResponseTotalStatus::p_statuses_size() const {
  return p_statuses_.size();
}
inline void SimResponseTotalStatus::clear_p_statuses() {
  p_statuses_.Clear();
}
inline const ::prt::PassengerStatus& SimResponseTotalStatus::p_statuses(int index) const {
  return p_statuses_.Get(index);
}
inline ::prt::PassengerStatus* SimResponseTotalStatus::mutable_p_statuses(int index) {
  return p_statuses_.Mutable(index);
}
inline ::prt::PassengerStatus* SimResponseTotalStatus::add_p_statuses() {
  return p_statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::PassengerStatus >&
SimResponseTotalStatus::p_statuses() const {
  return p_statuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::PassengerStatus >*
SimResponseTotalStatus::mutable_p_statuses() {
  return &p_statuses_;
}

// repeated .prt.SwitchStatus sw_statuses = 5;
inline int SimResponseTotalStatus::sw_statuses_size() const {
  return sw_statuses_.size();
}
inline void SimResponseTotalStatus::clear_sw_statuses() {
  sw_statuses_.Clear();
}
inline const ::prt::SwitchStatus& SimResponseTotalStatus::sw_statuses(int index) const {
  return sw_statuses_.Get(index);
}
inline ::prt::SwitchStatus* SimResponseTotalStatus::mutable_sw_statuses(int index) {
  return sw_statuses_.Mutable(index);
}
inline ::prt::SwitchStatus* SimResponseTotalStatus::add_sw_statuses() {
  return sw_statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::SwitchStatus >&
SimResponseTotalStatus::sw_statuses() const {
  return sw_statuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::SwitchStatus >*
SimResponseTotalStatus::mutable_sw_statuses() {
  return &sw_statuses_;
}

// repeated .prt.TrackSegmentStatus ts_statuses = 6;
inline int SimResponseTotalStatus::ts_statuses_size() const {
  return ts_statuses_.size();
}
inline void SimResponseTotalStatus::clear_ts_statuses() {
  ts_statuses_.Clear();
}
inline const ::prt::TrackSegmentStatus& SimResponseTotalStatus::ts_statuses(int index) const {
  return ts_statuses_.Get(index);
}
inline ::prt::TrackSegmentStatus* SimResponseTotalStatus::mutable_ts_statuses(int index) {
  return ts_statuses_.Mutable(index);
}
inline ::prt::TrackSegmentStatus* SimResponseTotalStatus::add_ts_statuses() {
  return ts_statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::TrackSegmentStatus >&
SimResponseTotalStatus::ts_statuses() const {
  return ts_statuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::TrackSegmentStatus >*
SimResponseTotalStatus::mutable_ts_statuses() {
  return &ts_statuses_;
}

// -------------------------------------------------------------------

// SimRequestSwitchCmd

// required int32 swID = 1;
inline bool SimRequestSwitchCmd::has_swid() const {
  return _has_bit(0);
}
inline void SimRequestSwitchCmd::clear_swid() {
  swid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimRequestSwitchCmd::swid() const {
  return swid_;
}
inline void SimRequestSwitchCmd::set_swid(::google::protobuf::int32 value) {
  _set_bit(0);
  swid_ = value;
}

// required int32 vID = 2;
inline bool SimRequestSwitchCmd::has_vid() const {
  return _has_bit(1);
}
inline void SimRequestSwitchCmd::clear_vid() {
  vid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimRequestSwitchCmd::vid() const {
  return vid_;
}
inline void SimRequestSwitchCmd::set_vid(::google::protobuf::int32 value) {
  _set_bit(1);
  vid_ = value;
}

// required int32 ts1ID = 3;
inline bool SimRequestSwitchCmd::has_ts1id() const {
  return _has_bit(2);
}
inline void SimRequestSwitchCmd::clear_ts1id() {
  ts1id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimRequestSwitchCmd::ts1id() const {
  return ts1id_;
}
inline void SimRequestSwitchCmd::set_ts1id(::google::protobuf::int32 value) {
  _set_bit(2);
  ts1id_ = value;
}

// required int32 ts2ID = 4;
inline bool SimRequestSwitchCmd::has_ts2id() const {
  return _has_bit(3);
}
inline void SimRequestSwitchCmd::clear_ts2id() {
  ts2id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimRequestSwitchCmd::ts2id() const {
  return ts2id_;
}
inline void SimRequestSwitchCmd::set_ts2id(::google::protobuf::int32 value) {
  _set_bit(3);
  ts2id_ = value;
}

// -------------------------------------------------------------------

// SimNotifyVehiclePosition

// optional int32 msgID = 1;
inline bool SimNotifyVehiclePosition::has_msgid() const {
  return _has_bit(0);
}
inline void SimNotifyVehiclePosition::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyVehiclePosition::msgid() const {
  return msgid_;
}
inline void SimNotifyVehiclePosition::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 vID = 2;
inline bool SimNotifyVehiclePosition::has_vid() const {
  return _has_bit(1);
}
inline void SimNotifyVehiclePosition::clear_vid() {
  vid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyVehiclePosition::vid() const {
  return vid_;
}
inline void SimNotifyVehiclePosition::set_vid(::google::protobuf::int32 value) {
  _set_bit(1);
  vid_ = value;
}

// required int32 tsID = 3;
inline bool SimNotifyVehiclePosition::has_tsid() const {
  return _has_bit(2);
}
inline void SimNotifyVehiclePosition::clear_tsid() {
  tsid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimNotifyVehiclePosition::tsid() const {
  return tsid_;
}
inline void SimNotifyVehiclePosition::set_tsid(::google::protobuf::int32 value) {
  _set_bit(2);
  tsid_ = value;
}

// required int32 pos = 4;
inline bool SimNotifyVehiclePosition::has_pos() const {
  return _has_bit(3);
}
inline void SimNotifyVehiclePosition::clear_pos() {
  pos_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyVehiclePosition::pos() const {
  return pos_;
}
inline void SimNotifyVehiclePosition::set_pos(::google::protobuf::int32 value) {
  _set_bit(3);
  pos_ = value;
}

// -------------------------------------------------------------------

// SimNotifyTime

// optional int32 msgID = 1;
inline bool SimNotifyTime::has_msgid() const {
  return _has_bit(0);
}
inline void SimNotifyTime::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyTime::msgid() const {
  return msgid_;
}
inline void SimNotifyTime::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required double time = 2;
inline bool SimNotifyTime::has_time() const {
  return _has_bit(1);
}
inline void SimNotifyTime::clear_time() {
  time_ = 0;
  _clear_bit(1);
}
inline double SimNotifyTime::time() const {
  return time_;
}
inline void SimNotifyTime::set_time(double value) {
  _set_bit(1);
  time_ = value;
}

// -------------------------------------------------------------------

// SimNotifyVehicleArrive

// required .prt.VehicleStatus v_status = 1;
inline bool SimNotifyVehicleArrive::has_v_status() const {
  return _has_bit(0);
}
inline void SimNotifyVehicleArrive::clear_v_status() {
  if (v_status_ != NULL) v_status_->::prt::VehicleStatus::Clear();
  _clear_bit(0);
}
inline const ::prt::VehicleStatus& SimNotifyVehicleArrive::v_status() const {
  return v_status_ != NULL ? *v_status_ : *default_instance_->v_status_;
}
inline ::prt::VehicleStatus* SimNotifyVehicleArrive::mutable_v_status() {
  _set_bit(0);
  if (v_status_ == NULL) v_status_ = new ::prt::VehicleStatus;
  return v_status_;
}

// -------------------------------------------------------------------

// SimNotifyVehicleExit

// required .prt.VehicleStatus v_status = 1;
inline bool SimNotifyVehicleExit::has_v_status() const {
  return _has_bit(0);
}
inline void SimNotifyVehicleExit::clear_v_status() {
  if (v_status_ != NULL) v_status_->::prt::VehicleStatus::Clear();
  _clear_bit(0);
}
inline const ::prt::VehicleStatus& SimNotifyVehicleExit::v_status() const {
  return v_status_ != NULL ? *v_status_ : *default_instance_->v_status_;
}
inline ::prt::VehicleStatus* SimNotifyVehicleExit::mutable_v_status() {
  _set_bit(0);
  if (v_status_ == NULL) v_status_ = new ::prt::VehicleStatus;
  return v_status_;
}

// -------------------------------------------------------------------

// SimNotifyVehicleReadyLoad

// required int32 vID = 1;
inline bool SimNotifyVehicleReadyLoad::has_vid() const {
  return _has_bit(0);
}
inline void SimNotifyVehicleReadyLoad::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyVehicleReadyLoad::vid() const {
  return vid_;
}
inline void SimNotifyVehicleReadyLoad::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool SimNotifyVehicleReadyLoad::has_sid() const {
  return _has_bit(1);
}
inline void SimNotifyVehicleReadyLoad::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyVehicleReadyLoad::sid() const {
  return sid_;
}
inline void SimNotifyVehicleReadyLoad::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// -------------------------------------------------------------------

// SimNotifyVehicleCollision

// required int32 v1ID = 1;
inline bool SimNotifyVehicleCollision::has_v1id() const {
  return _has_bit(0);
}
inline void SimNotifyVehicleCollision::clear_v1id() {
  v1id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyVehicleCollision::v1id() const {
  return v1id_;
}
inline void SimNotifyVehicleCollision::set_v1id(::google::protobuf::int32 value) {
  _set_bit(0);
  v1id_ = value;
}

// required int32 v2ID = 2;
inline bool SimNotifyVehicleCollision::has_v2id() const {
  return _has_bit(1);
}
inline void SimNotifyVehicleCollision::clear_v2id() {
  v2id_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyVehicleCollision::v2id() const {
  return v2id_;
}
inline void SimNotifyVehicleCollision::set_v2id(::google::protobuf::int32 value) {
  _set_bit(1);
  v2id_ = value;
}

// required .prt.LocationType loc_type = 3;
inline bool SimNotifyVehicleCollision::has_loc_type() const {
  return _has_bit(2);
}
inline void SimNotifyVehicleCollision::clear_loc_type() {
  loc_type_ = 0;
  _clear_bit(2);
}
inline prt::LocationType SimNotifyVehicleCollision::loc_type() const {
  return static_cast< prt::LocationType >(loc_type_);
}
inline void SimNotifyVehicleCollision::set_loc_type(prt::LocationType value) {
  GOOGLE_DCHECK(prt::LocationType_IsValid(value));
  _set_bit(2);
  loc_type_ = value;
}

// required int32 locID = 4;
inline bool SimNotifyVehicleCollision::has_locid() const {
  return _has_bit(3);
}
inline void SimNotifyVehicleCollision::clear_locid() {
  locid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyVehicleCollision::locid() const {
  return locid_;
}
inline void SimNotifyVehicleCollision::set_locid(::google::protobuf::int32 value) {
  _set_bit(3);
  locid_ = value;
}

// required int32 pos = 5;
inline bool SimNotifyVehicleCollision::has_pos() const {
  return _has_bit(4);
}
inline void SimNotifyVehicleCollision::clear_pos() {
  pos_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 SimNotifyVehicleCollision::pos() const {
  return pos_;
}
inline void SimNotifyVehicleCollision::set_pos(::google::protobuf::int32 value) {
  _set_bit(4);
  pos_ = value;
}

// required int32 delta_v = 6;
inline bool SimNotifyVehicleCollision::has_delta_v() const {
  return _has_bit(5);
}
inline void SimNotifyVehicleCollision::clear_delta_v() {
  delta_v_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 SimNotifyVehicleCollision::delta_v() const {
  return delta_v_;
}
inline void SimNotifyVehicleCollision::set_delta_v(::google::protobuf::int32 value) {
  _set_bit(5);
  delta_v_ = value;
}

// optional bool rearend = 7;
inline bool SimNotifyVehicleCollision::has_rearend() const {
  return _has_bit(6);
}
inline void SimNotifyVehicleCollision::clear_rearend() {
  rearend_ = false;
  _clear_bit(6);
}
inline bool SimNotifyVehicleCollision::rearend() const {
  return rearend_;
}
inline void SimNotifyVehicleCollision::set_rearend(bool value) {
  _set_bit(6);
  rearend_ = value;
}

// optional bool sideswipe = 8;
inline bool SimNotifyVehicleCollision::has_sideswipe() const {
  return _has_bit(7);
}
inline void SimNotifyVehicleCollision::clear_sideswipe() {
  sideswipe_ = false;
  _clear_bit(7);
}
inline bool SimNotifyVehicleCollision::sideswipe() const {
  return sideswipe_;
}
inline void SimNotifyVehicleCollision::set_sideswipe(bool value) {
  _set_bit(7);
  sideswipe_ = value;
}

// -------------------------------------------------------------------

// SimNotifyPassengerEmbarkStart

// required int32 vID = 1;
inline bool SimNotifyPassengerEmbarkStart::has_vid() const {
  return _has_bit(0);
}
inline void SimNotifyPassengerEmbarkStart::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkStart::vid() const {
  return vid_;
}
inline void SimNotifyPassengerEmbarkStart::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool SimNotifyPassengerEmbarkStart::has_sid() const {
  return _has_bit(1);
}
inline void SimNotifyPassengerEmbarkStart::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkStart::sid() const {
  return sid_;
}
inline void SimNotifyPassengerEmbarkStart::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool SimNotifyPassengerEmbarkStart::has_platformid() const {
  return _has_bit(2);
}
inline void SimNotifyPassengerEmbarkStart::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkStart::platformid() const {
  return platformid_;
}
inline void SimNotifyPassengerEmbarkStart::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 pID = 4;
inline bool SimNotifyPassengerEmbarkStart::has_pid() const {
  return _has_bit(3);
}
inline void SimNotifyPassengerEmbarkStart::clear_pid() {
  pid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkStart::pid() const {
  return pid_;
}
inline void SimNotifyPassengerEmbarkStart::set_pid(::google::protobuf::int32 value) {
  _set_bit(3);
  pid_ = value;
}

// required int32 berthID = 5;
inline bool SimNotifyPassengerEmbarkStart::has_berthid() const {
  return _has_bit(4);
}
inline void SimNotifyPassengerEmbarkStart::clear_berthid() {
  berthid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkStart::berthid() const {
  return berthid_;
}
inline void SimNotifyPassengerEmbarkStart::set_berthid(::google::protobuf::int32 value) {
  _set_bit(4);
  berthid_ = value;
}

// -------------------------------------------------------------------

// SimNotifyPassengerEmbarkEnd

// required int32 vID = 1;
inline bool SimNotifyPassengerEmbarkEnd::has_vid() const {
  return _has_bit(0);
}
inline void SimNotifyPassengerEmbarkEnd::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkEnd::vid() const {
  return vid_;
}
inline void SimNotifyPassengerEmbarkEnd::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool SimNotifyPassengerEmbarkEnd::has_sid() const {
  return _has_bit(1);
}
inline void SimNotifyPassengerEmbarkEnd::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkEnd::sid() const {
  return sid_;
}
inline void SimNotifyPassengerEmbarkEnd::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool SimNotifyPassengerEmbarkEnd::has_platformid() const {
  return _has_bit(2);
}
inline void SimNotifyPassengerEmbarkEnd::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkEnd::platformid() const {
  return platformid_;
}
inline void SimNotifyPassengerEmbarkEnd::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 pID = 4;
inline bool SimNotifyPassengerEmbarkEnd::has_pid() const {
  return _has_bit(3);
}
inline void SimNotifyPassengerEmbarkEnd::clear_pid() {
  pid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkEnd::pid() const {
  return pid_;
}
inline void SimNotifyPassengerEmbarkEnd::set_pid(::google::protobuf::int32 value) {
  _set_bit(3);
  pid_ = value;
}

// required int32 berthID = 5;
inline bool SimNotifyPassengerEmbarkEnd::has_berthid() const {
  return _has_bit(4);
}
inline void SimNotifyPassengerEmbarkEnd::clear_berthid() {
  berthid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 SimNotifyPassengerEmbarkEnd::berthid() const {
  return berthid_;
}
inline void SimNotifyPassengerEmbarkEnd::set_berthid(::google::protobuf::int32 value) {
  _set_bit(4);
  berthid_ = value;
}

// -------------------------------------------------------------------

// SimNotifyPassengerDisembarkStart

// required int32 vID = 1;
inline bool SimNotifyPassengerDisembarkStart::has_vid() const {
  return _has_bit(0);
}
inline void SimNotifyPassengerDisembarkStart::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkStart::vid() const {
  return vid_;
}
inline void SimNotifyPassengerDisembarkStart::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool SimNotifyPassengerDisembarkStart::has_sid() const {
  return _has_bit(1);
}
inline void SimNotifyPassengerDisembarkStart::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkStart::sid() const {
  return sid_;
}
inline void SimNotifyPassengerDisembarkStart::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool SimNotifyPassengerDisembarkStart::has_platformid() const {
  return _has_bit(2);
}
inline void SimNotifyPassengerDisembarkStart::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkStart::platformid() const {
  return platformid_;
}
inline void SimNotifyPassengerDisembarkStart::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 pID = 4;
inline bool SimNotifyPassengerDisembarkStart::has_pid() const {
  return _has_bit(3);
}
inline void SimNotifyPassengerDisembarkStart::clear_pid() {
  pid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkStart::pid() const {
  return pid_;
}
inline void SimNotifyPassengerDisembarkStart::set_pid(::google::protobuf::int32 value) {
  _set_bit(3);
  pid_ = value;
}

// required int32 berthID = 5;
inline bool SimNotifyPassengerDisembarkStart::has_berthid() const {
  return _has_bit(4);
}
inline void SimNotifyPassengerDisembarkStart::clear_berthid() {
  berthid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkStart::berthid() const {
  return berthid_;
}
inline void SimNotifyPassengerDisembarkStart::set_berthid(::google::protobuf::int32 value) {
  _set_bit(4);
  berthid_ = value;
}

// -------------------------------------------------------------------

// SimNotifyPassengerDisembarkEnd

// required int32 vID = 1;
inline bool SimNotifyPassengerDisembarkEnd::has_vid() const {
  return _has_bit(0);
}
inline void SimNotifyPassengerDisembarkEnd::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkEnd::vid() const {
  return vid_;
}
inline void SimNotifyPassengerDisembarkEnd::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 sID = 2;
inline bool SimNotifyPassengerDisembarkEnd::has_sid() const {
  return _has_bit(1);
}
inline void SimNotifyPassengerDisembarkEnd::clear_sid() {
  sid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkEnd::sid() const {
  return sid_;
}
inline void SimNotifyPassengerDisembarkEnd::set_sid(::google::protobuf::int32 value) {
  _set_bit(1);
  sid_ = value;
}

// required int32 platformID = 3;
inline bool SimNotifyPassengerDisembarkEnd::has_platformid() const {
  return _has_bit(2);
}
inline void SimNotifyPassengerDisembarkEnd::clear_platformid() {
  platformid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkEnd::platformid() const {
  return platformid_;
}
inline void SimNotifyPassengerDisembarkEnd::set_platformid(::google::protobuf::int32 value) {
  _set_bit(2);
  platformid_ = value;
}

// required int32 pID = 4;
inline bool SimNotifyPassengerDisembarkEnd::has_pid() const {
  return _has_bit(3);
}
inline void SimNotifyPassengerDisembarkEnd::clear_pid() {
  pid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkEnd::pid() const {
  return pid_;
}
inline void SimNotifyPassengerDisembarkEnd::set_pid(::google::protobuf::int32 value) {
  _set_bit(3);
  pid_ = value;
}

// required int32 berthID = 5;
inline bool SimNotifyPassengerDisembarkEnd::has_berthid() const {
  return _has_bit(4);
}
inline void SimNotifyPassengerDisembarkEnd::clear_berthid() {
  berthid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 SimNotifyPassengerDisembarkEnd::berthid() const {
  return berthid_;
}
inline void SimNotifyPassengerDisembarkEnd::set_berthid(::google::protobuf::int32 value) {
  _set_bit(4);
  berthid_ = value;
}

// -------------------------------------------------------------------

// SimEventTrackSegmentDisabled

// required int32 tsID = 2;
inline bool SimEventTrackSegmentDisabled::has_tsid() const {
  return _has_bit(0);
}
inline void SimEventTrackSegmentDisabled::clear_tsid() {
  tsid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventTrackSegmentDisabled::tsid() const {
  return tsid_;
}
inline void SimEventTrackSegmentDisabled::set_tsid(::google::protobuf::int32 value) {
  _set_bit(0);
  tsid_ = value;
}

// -------------------------------------------------------------------

// SimEventTrackSegmentReenabled

// required int32 tsID = 2;
inline bool SimEventTrackSegmentReenabled::has_tsid() const {
  return _has_bit(0);
}
inline void SimEventTrackSegmentReenabled::clear_tsid() {
  tsid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventTrackSegmentReenabled::tsid() const {
  return tsid_;
}
inline void SimEventTrackSegmentReenabled::set_tsid(::google::protobuf::int32 value) {
  _set_bit(0);
  tsid_ = value;
}

// -------------------------------------------------------------------

// SimEventSwitchDisabled

// required int32 swID = 2;
inline bool SimEventSwitchDisabled::has_swid() const {
  return _has_bit(0);
}
inline void SimEventSwitchDisabled::clear_swid() {
  swid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventSwitchDisabled::swid() const {
  return swid_;
}
inline void SimEventSwitchDisabled::set_swid(::google::protobuf::int32 value) {
  _set_bit(0);
  swid_ = value;
}

// -------------------------------------------------------------------

// SimEventSwitchReenabled

// required int32 swID = 2;
inline bool SimEventSwitchReenabled::has_swid() const {
  return _has_bit(0);
}
inline void SimEventSwitchReenabled::clear_swid() {
  swid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventSwitchReenabled::swid() const {
  return swid_;
}
inline void SimEventSwitchReenabled::set_swid(::google::protobuf::int32 value) {
  _set_bit(0);
  swid_ = value;
}

// -------------------------------------------------------------------

// SimEventStationDisabled

// required int32 sID = 2;
inline bool SimEventStationDisabled::has_sid() const {
  return _has_bit(0);
}
inline void SimEventStationDisabled::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventStationDisabled::sid() const {
  return sid_;
}
inline void SimEventStationDisabled::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// -------------------------------------------------------------------

// SimEventStationReenabled

// required int32 sID = 2;
inline bool SimEventStationReenabled::has_sid() const {
  return _has_bit(0);
}
inline void SimEventStationReenabled::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventStationReenabled::sid() const {
  return sid_;
}
inline void SimEventStationReenabled::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// -------------------------------------------------------------------

// SimEventVehicleDisabled

// required int32 vID = 2;
inline bool SimEventVehicleDisabled::has_vid() const {
  return _has_bit(0);
}
inline void SimEventVehicleDisabled::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventVehicleDisabled::vid() const {
  return vid_;
}
inline void SimEventVehicleDisabled::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// -------------------------------------------------------------------

// SimEventVehicleReenabled

// required int32 vID = 2;
inline bool SimEventVehicleReenabled::has_vid() const {
  return _has_bit(0);
}
inline void SimEventVehicleReenabled::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventVehicleReenabled::vid() const {
  return vid_;
}
inline void SimEventVehicleReenabled::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// -------------------------------------------------------------------

// SimEventPassengerCreated

// required .prt.PassengerStatus p_status = 1;
inline bool SimEventPassengerCreated::has_p_status() const {
  return _has_bit(0);
}
inline void SimEventPassengerCreated::clear_p_status() {
  if (p_status_ != NULL) p_status_->::prt::PassengerStatus::Clear();
  _clear_bit(0);
}
inline const ::prt::PassengerStatus& SimEventPassengerCreated::p_status() const {
  return p_status_ != NULL ? *p_status_ : *default_instance_->p_status_;
}
inline ::prt::PassengerStatus* SimEventPassengerCreated::mutable_p_status() {
  _set_bit(0);
  if (p_status_ == NULL) p_status_ = new ::prt::PassengerStatus;
  return p_status_;
}

// -------------------------------------------------------------------

// SimEventPassengerChangedest

// required int32 pID = 1;
inline bool SimEventPassengerChangedest::has_pid() const {
  return _has_bit(0);
}
inline void SimEventPassengerChangedest::clear_pid() {
  pid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimEventPassengerChangedest::pid() const {
  return pid_;
}
inline void SimEventPassengerChangedest::set_pid(::google::protobuf::int32 value) {
  _set_bit(0);
  pid_ = value;
}

// -------------------------------------------------------------------

// SimMsgHdrInvalidSeparator

// required int32 msgID = 1;
inline bool SimMsgHdrInvalidSeparator::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgHdrInvalidSeparator::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidSeparator::msgid() const {
  return msgid_;
}
inline void SimMsgHdrInvalidSeparator::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 msg_sep = 2;
inline bool SimMsgHdrInvalidSeparator::has_msg_sep() const {
  return _has_bit(1);
}
inline void SimMsgHdrInvalidSeparator::clear_msg_sep() {
  msg_sep_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidSeparator::msg_sep() const {
  return msg_sep_;
}
inline void SimMsgHdrInvalidSeparator::set_msg_sep(::google::protobuf::int32 value) {
  _set_bit(1);
  msg_sep_ = value;
}

// -------------------------------------------------------------------

// SimMsgHdrInvalidType

// required int32 msgID = 1;
inline bool SimMsgHdrInvalidType::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgHdrInvalidType::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidType::msgid() const {
  return msgid_;
}
inline void SimMsgHdrInvalidType::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 msg_type = 2;
inline bool SimMsgHdrInvalidType::has_msg_type() const {
  return _has_bit(1);
}
inline void SimMsgHdrInvalidType::clear_msg_type() {
  msg_type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidType::msg_type() const {
  return msg_type_;
}
inline void SimMsgHdrInvalidType::set_msg_type(::google::protobuf::int32 value) {
  _set_bit(1);
  msg_type_ = value;
}

// -------------------------------------------------------------------

// SimMsgHdrInvalidID

// required int32 msgID = 1;
inline bool SimMsgHdrInvalidID::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgHdrInvalidID::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidID::msgid() const {
  return msgid_;
}
inline void SimMsgHdrInvalidID::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// -------------------------------------------------------------------

// SimMsgHdrInvalidTime

// required int32 msgID = 1;
inline bool SimMsgHdrInvalidTime::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgHdrInvalidTime::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidTime::msgid() const {
  return msgid_;
}
inline void SimMsgHdrInvalidTime::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 msg_time = 2;
inline bool SimMsgHdrInvalidTime::has_msg_time() const {
  return _has_bit(1);
}
inline void SimMsgHdrInvalidTime::clear_msg_time() {
  msg_time_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidTime::msg_time() const {
  return msg_time_;
}
inline void SimMsgHdrInvalidTime::set_msg_time(::google::protobuf::int32 value) {
  _set_bit(1);
  msg_time_ = value;
}

// -------------------------------------------------------------------

// SimMsgHdrInvalidSize

// required int32 msgID = 1;
inline bool SimMsgHdrInvalidSize::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgHdrInvalidSize::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidSize::msgid() const {
  return msgid_;
}
inline void SimMsgHdrInvalidSize::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required int32 msg_size = 2;
inline bool SimMsgHdrInvalidSize::has_msg_size() const {
  return _has_bit(1);
}
inline void SimMsgHdrInvalidSize::clear_msg_size() {
  msg_size_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SimMsgHdrInvalidSize::msg_size() const {
  return msg_size_;
}
inline void SimMsgHdrInvalidSize::set_msg_size(::google::protobuf::int32 value) {
  _set_bit(1);
  msg_size_ = value;
}

// -------------------------------------------------------------------

// SimMsgBodyInvalid

// required int32 msgID = 1;
inline bool SimMsgBodyInvalid::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgBodyInvalid::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgBodyInvalid::msgid() const {
  return msgid_;
}
inline void SimMsgBodyInvalid::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// -------------------------------------------------------------------

// SimMsgBodyInvalidId

// required int32 msgID = 1;
inline bool SimMsgBodyInvalidId::has_msgid() const {
  return _has_bit(0);
}
inline void SimMsgBodyInvalidId::clear_msgid() {
  msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SimMsgBodyInvalidId::msgid() const {
  return msgid_;
}
inline void SimMsgBodyInvalidId::set_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  msgid_ = value;
}

// required .prt.LocationType id_type = 2;
inline bool SimMsgBodyInvalidId::has_id_type() const {
  return _has_bit(1);
}
inline void SimMsgBodyInvalidId::clear_id_type() {
  id_type_ = 0;
  _clear_bit(1);
}
inline prt::LocationType SimMsgBodyInvalidId::id_type() const {
  return static_cast< prt::LocationType >(id_type_);
}
inline void SimMsgBodyInvalidId::set_id_type(prt::LocationType value) {
  GOOGLE_DCHECK(prt::LocationType_IsValid(value));
  _set_bit(1);
  id_type_ = value;
}

// required int32 ID = 3;
inline bool SimMsgBodyInvalidId::has_id() const {
  return _has_bit(2);
}
inline void SimMsgBodyInvalidId::clear_id() {
  id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SimMsgBodyInvalidId::id() const {
  return id_;
}
inline void SimMsgBodyInvalidId::set_id(::google::protobuf::int32 value) {
  _set_bit(2);
  id_ = value;
}

// -------------------------------------------------------------------

// VehicleStatus

// required int32 vID = 1;
inline bool VehicleStatus::has_vid() const {
  return _has_bit(0);
}
inline void VehicleStatus::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 VehicleStatus::vid() const {
  return vid_;
}
inline void VehicleStatus::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 nose_locID = 3;
inline bool VehicleStatus::has_nose_locid() const {
  return _has_bit(1);
}
inline void VehicleStatus::clear_nose_locid() {
  nose_locid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 VehicleStatus::nose_locid() const {
  return nose_locid_;
}
inline void VehicleStatus::set_nose_locid(::google::protobuf::int32 value) {
  _set_bit(1);
  nose_locid_ = value;
}

// required float nose_pos = 4;
inline bool VehicleStatus::has_nose_pos() const {
  return _has_bit(2);
}
inline void VehicleStatus::clear_nose_pos() {
  nose_pos_ = 0;
  _clear_bit(2);
}
inline float VehicleStatus::nose_pos() const {
  return nose_pos_;
}
inline void VehicleStatus::set_nose_pos(float value) {
  _set_bit(2);
  nose_pos_ = value;
}

// required int32 tail_locID = 6;
inline bool VehicleStatus::has_tail_locid() const {
  return _has_bit(3);
}
inline void VehicleStatus::clear_tail_locid() {
  tail_locid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 VehicleStatus::tail_locid() const {
  return tail_locid_;
}
inline void VehicleStatus::set_tail_locid(::google::protobuf::int32 value) {
  _set_bit(3);
  tail_locid_ = value;
}

// required float tail_pos = 7;
inline bool VehicleStatus::has_tail_pos() const {
  return _has_bit(4);
}
inline void VehicleStatus::clear_tail_pos() {
  tail_pos_ = 0;
  _clear_bit(4);
}
inline float VehicleStatus::tail_pos() const {
  return tail_pos_;
}
inline void VehicleStatus::set_tail_pos(float value) {
  _set_bit(4);
  tail_pos_ = value;
}

// required float vel = 8;
inline bool VehicleStatus::has_vel() const {
  return _has_bit(5);
}
inline void VehicleStatus::clear_vel() {
  vel_ = 0;
  _clear_bit(5);
}
inline float VehicleStatus::vel() const {
  return vel_;
}
inline void VehicleStatus::set_vel(float value) {
  _set_bit(5);
  vel_ = value;
}

// required float accel = 9;
inline bool VehicleStatus::has_accel() const {
  return _has_bit(6);
}
inline void VehicleStatus::clear_accel() {
  accel_ = 0;
  _clear_bit(6);
}
inline float VehicleStatus::accel() const {
  return accel_;
}
inline void VehicleStatus::set_accel(float value) {
  _set_bit(6);
  accel_ = value;
}

// repeated int32 passengerIDs = 10 [packed = true];
inline int VehicleStatus::passengerids_size() const {
  return passengerids_.size();
}
inline void VehicleStatus::clear_passengerids() {
  passengerids_.Clear();
}
inline ::google::protobuf::int32 VehicleStatus::passengerids(int index) const {
  return passengerids_.Get(index);
}
inline void VehicleStatus::set_passengerids(int index, ::google::protobuf::int32 value) {
  passengerids_.Set(index, value);
}
inline void VehicleStatus::add_passengerids(::google::protobuf::int32 value) {
  passengerids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VehicleStatus::passengerids() const {
  return passengerids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VehicleStatus::mutable_passengerids() {
  return &passengerids_;
}

// optional int32 headway = 12;
inline bool VehicleStatus::has_headway() const {
  return _has_bit(8);
}
inline void VehicleStatus::clear_headway() {
  headway_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 VehicleStatus::headway() const {
  return headway_;
}
inline void VehicleStatus::set_headway(::google::protobuf::int32 value) {
  _set_bit(8);
  headway_ = value;
}

// -------------------------------------------------------------------

// StationSummary

// required int32 sID = 1;
inline bool StationSummary::has_sid() const {
  return _has_bit(0);
}
inline void StationSummary::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 StationSummary::sid() const {
  return sid_;
}
inline void StationSummary::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional string label = 2;
inline bool StationSummary::has_label() const {
  return _has_bit(1);
}
inline void StationSummary::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& StationSummary::label() const {
  return *label_;
}
inline void StationSummary::set_label(const ::std::string& value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void StationSummary::set_label(const char* value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void StationSummary::set_label(const char* value, size_t size) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationSummary::mutable_label() {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// repeated int32 loaded_ready_launch = 3 [packed = true];
inline int StationSummary::loaded_ready_launch_size() const {
  return loaded_ready_launch_.size();
}
inline void StationSummary::clear_loaded_ready_launch() {
  loaded_ready_launch_.Clear();
}
inline ::google::protobuf::int32 StationSummary::loaded_ready_launch(int index) const {
  return loaded_ready_launch_.Get(index);
}
inline void StationSummary::set_loaded_ready_launch(int index, ::google::protobuf::int32 value) {
  loaded_ready_launch_.Set(index, value);
}
inline void StationSummary::add_loaded_ready_launch(::google::protobuf::int32 value) {
  loaded_ready_launch_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StationSummary::loaded_ready_launch() const {
  return loaded_ready_launch_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StationSummary::mutable_loaded_ready_launch() {
  return &loaded_ready_launch_;
}

// repeated int32 unloaded_ready_launch = 4 [packed = true];
inline int StationSummary::unloaded_ready_launch_size() const {
  return unloaded_ready_launch_.size();
}
inline void StationSummary::clear_unloaded_ready_launch() {
  unloaded_ready_launch_.Clear();
}
inline ::google::protobuf::int32 StationSummary::unloaded_ready_launch(int index) const {
  return unloaded_ready_launch_.Get(index);
}
inline void StationSummary::set_unloaded_ready_launch(int index, ::google::protobuf::int32 value) {
  unloaded_ready_launch_.Set(index, value);
}
inline void StationSummary::add_unloaded_ready_launch(::google::protobuf::int32 value) {
  unloaded_ready_launch_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StationSummary::unloaded_ready_launch() const {
  return unloaded_ready_launch_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StationSummary::mutable_unloaded_ready_launch() {
  return &unloaded_ready_launch_;
}

// repeated int32 pID = 5 [packed = true];
inline int StationSummary::pid_size() const {
  return pid_.size();
}
inline void StationSummary::clear_pid() {
  pid_.Clear();
}
inline ::google::protobuf::int32 StationSummary::pid(int index) const {
  return pid_.Get(index);
}
inline void StationSummary::set_pid(int index, ::google::protobuf::int32 value) {
  pid_.Set(index, value);
}
inline void StationSummary::add_pid(::google::protobuf::int32 value) {
  pid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StationSummary::pid() const {
  return pid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StationSummary::mutable_pid() {
  return &pid_;
}

// required int32 next_accept_time = 6;
inline bool StationSummary::has_next_accept_time() const {
  return _has_bit(5);
}
inline void StationSummary::clear_next_accept_time() {
  next_accept_time_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 StationSummary::next_accept_time() const {
  return next_accept_time_;
}
inline void StationSummary::set_next_accept_time(::google::protobuf::int32 value) {
  _set_bit(5);
  next_accept_time_ = value;
}

// required int32 vehicles_needed = 7;
inline bool StationSummary::has_vehicles_needed() const {
  return _has_bit(6);
}
inline void StationSummary::clear_vehicles_needed() {
  vehicles_needed_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 StationSummary::vehicles_needed() const {
  return vehicles_needed_;
}
inline void StationSummary::set_vehicles_needed(::google::protobuf::int32 value) {
  _set_bit(6);
  vehicles_needed_ = value;
}

// -------------------------------------------------------------------

// StationStatus

// required int32 sID = 1;
inline bool StationStatus::has_sid() const {
  return _has_bit(0);
}
inline void StationStatus::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 StationStatus::sid() const {
  return sid_;
}
inline void StationStatus::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional string label = 2;
inline bool StationStatus::has_label() const {
  return _has_bit(1);
}
inline void StationStatus::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& StationStatus::label() const {
  return *label_;
}
inline void StationStatus::set_label(const ::std::string& value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void StationStatus::set_label(const char* value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void StationStatus::set_label(const char* value, size_t size) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StationStatus::mutable_label() {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// repeated .prt.PlatformStatus platform_status = 3;
inline int StationStatus::platform_status_size() const {
  return platform_status_.size();
}
inline void StationStatus::clear_platform_status() {
  platform_status_.Clear();
}
inline const ::prt::PlatformStatus& StationStatus::platform_status(int index) const {
  return platform_status_.Get(index);
}
inline ::prt::PlatformStatus* StationStatus::mutable_platform_status(int index) {
  return platform_status_.Mutable(index);
}
inline ::prt::PlatformStatus* StationStatus::add_platform_status() {
  return platform_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::PlatformStatus >&
StationStatus::platform_status() const {
  return platform_status_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::PlatformStatus >*
StationStatus::mutable_platform_status() {
  return &platform_status_;
}

// repeated int32 pID = 4 [packed = true];
inline int StationStatus::pid_size() const {
  return pid_.size();
}
inline void StationStatus::clear_pid() {
  pid_.Clear();
}
inline ::google::protobuf::int32 StationStatus::pid(int index) const {
  return pid_.Get(index);
}
inline void StationStatus::set_pid(int index, ::google::protobuf::int32 value) {
  pid_.Set(index, value);
}
inline void StationStatus::add_pid(::google::protobuf::int32 value) {
  pid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StationStatus::pid() const {
  return pid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StationStatus::mutable_pid() {
  return &pid_;
}

// required int32 v_adv_time = 5;
inline bool StationStatus::has_v_adv_time() const {
  return _has_bit(4);
}
inline void StationStatus::clear_v_adv_time() {
  v_adv_time_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 StationStatus::v_adv_time() const {
  return v_adv_time_;
}
inline void StationStatus::set_v_adv_time(::google::protobuf::int32 value) {
  _set_bit(4);
  v_adv_time_ = value;
}

// required .prt.StationPolicy policy = 6;
inline bool StationStatus::has_policy() const {
  return _has_bit(5);
}
inline void StationStatus::clear_policy() {
  policy_ = 1;
  _clear_bit(5);
}
inline prt::StationPolicy StationStatus::policy() const {
  return static_cast< prt::StationPolicy >(policy_);
}
inline void StationStatus::set_policy(prt::StationPolicy value) {
  GOOGLE_DCHECK(prt::StationPolicy_IsValid(value));
  _set_bit(5);
  policy_ = value;
}

// -------------------------------------------------------------------

// PlatformStatus

// required int32 platID = 1;
inline bool PlatformStatus::has_platid() const {
  return _has_bit(0);
}
inline void PlatformStatus::clear_platid() {
  platid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PlatformStatus::platid() const {
  return platid_;
}
inline void PlatformStatus::set_platid(::google::protobuf::int32 value) {
  _set_bit(0);
  platid_ = value;
}

// required int32 tsID = 2;
inline bool PlatformStatus::has_tsid() const {
  return _has_bit(1);
}
inline void PlatformStatus::clear_tsid() {
  tsid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PlatformStatus::tsid() const {
  return tsid_;
}
inline void PlatformStatus::set_tsid(::google::protobuf::int32 value) {
  _set_bit(1);
  tsid_ = value;
}

// required bool unloading = 3;
inline bool PlatformStatus::has_unloading() const {
  return _has_bit(2);
}
inline void PlatformStatus::clear_unloading() {
  unloading_ = false;
  _clear_bit(2);
}
inline bool PlatformStatus::unloading() const {
  return unloading_;
}
inline void PlatformStatus::set_unloading(bool value) {
  _set_bit(2);
  unloading_ = value;
}

// required bool loading = 4;
inline bool PlatformStatus::has_loading() const {
  return _has_bit(3);
}
inline void PlatformStatus::clear_loading() {
  loading_ = false;
  _clear_bit(3);
}
inline bool PlatformStatus::loading() const {
  return loading_;
}
inline void PlatformStatus::set_loading(bool value) {
  _set_bit(3);
  loading_ = value;
}

// repeated .prt.BerthStatus berths = 5;
inline int PlatformStatus::berths_size() const {
  return berths_.size();
}
inline void PlatformStatus::clear_berths() {
  berths_.Clear();
}
inline const ::prt::BerthStatus& PlatformStatus::berths(int index) const {
  return berths_.Get(index);
}
inline ::prt::BerthStatus* PlatformStatus::mutable_berths(int index) {
  return berths_.Mutable(index);
}
inline ::prt::BerthStatus* PlatformStatus::add_berths() {
  return berths_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::BerthStatus >&
PlatformStatus::berths() const {
  return berths_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::BerthStatus >*
PlatformStatus::mutable_berths() {
  return &berths_;
}

// -------------------------------------------------------------------

// BerthStatus

// required int32 bID = 1;
inline bool BerthStatus::has_bid() const {
  return _has_bit(0);
}
inline void BerthStatus::clear_bid() {
  bid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 BerthStatus::bid() const {
  return bid_;
}
inline void BerthStatus::set_bid(::google::protobuf::int32 value) {
  _set_bit(0);
  bid_ = value;
}

// required int32 vID = 2;
inline bool BerthStatus::has_vid() const {
  return _has_bit(1);
}
inline void BerthStatus::clear_vid() {
  vid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 BerthStatus::vid() const {
  return vid_;
}
inline void BerthStatus::set_vid(::google::protobuf::int32 value) {
  _set_bit(1);
  vid_ = value;
}

// required bool busy = 3;
inline bool BerthStatus::has_busy() const {
  return _has_bit(2);
}
inline void BerthStatus::clear_busy() {
  busy_ = false;
  _clear_bit(2);
}
inline bool BerthStatus::busy() const {
  return busy_;
}
inline void BerthStatus::set_busy(bool value) {
  _set_bit(2);
  busy_ = value;
}

// -------------------------------------------------------------------

// PassengerStatus

// required int32 pID = 1;
inline bool PassengerStatus::has_pid() const {
  return _has_bit(0);
}
inline void PassengerStatus::clear_pid() {
  pid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PassengerStatus::pid() const {
  return pid_;
}
inline void PassengerStatus::set_pid(::google::protobuf::int32 value) {
  _set_bit(0);
  pid_ = value;
}

// optional string label = 2;
inline bool PassengerStatus::has_label() const {
  return _has_bit(1);
}
inline void PassengerStatus::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PassengerStatus::label() const {
  return *label_;
}
inline void PassengerStatus::set_label(const ::std::string& value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void PassengerStatus::set_label(const char* value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void PassengerStatus::set_label(const char* value, size_t size) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PassengerStatus::mutable_label() {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// required .prt.LocationType loc_type = 3;
inline bool PassengerStatus::has_loc_type() const {
  return _has_bit(2);
}
inline void PassengerStatus::clear_loc_type() {
  loc_type_ = 0;
  _clear_bit(2);
}
inline prt::LocationType PassengerStatus::loc_type() const {
  return static_cast< prt::LocationType >(loc_type_);
}
inline void PassengerStatus::set_loc_type(prt::LocationType value) {
  GOOGLE_DCHECK(prt::LocationType_IsValid(value));
  _set_bit(2);
  loc_type_ = value;
}

// required int32 locID = 4;
inline bool PassengerStatus::has_locid() const {
  return _has_bit(3);
}
inline void PassengerStatus::clear_locid() {
  locid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PassengerStatus::locid() const {
  return locid_;
}
inline void PassengerStatus::set_locid(::google::protobuf::int32 value) {
  _set_bit(3);
  locid_ = value;
}

// required int32 src_stationID = 5;
inline bool PassengerStatus::has_src_stationid() const {
  return _has_bit(4);
}
inline void PassengerStatus::clear_src_stationid() {
  src_stationid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PassengerStatus::src_stationid() const {
  return src_stationid_;
}
inline void PassengerStatus::set_src_stationid(::google::protobuf::int32 value) {
  _set_bit(4);
  src_stationid_ = value;
}

// required int32 dest_stationID = 6;
inline bool PassengerStatus::has_dest_stationid() const {
  return _has_bit(5);
}
inline void PassengerStatus::clear_dest_stationid() {
  dest_stationid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PassengerStatus::dest_stationid() const {
  return dest_stationid_;
}
inline void PassengerStatus::set_dest_stationid(::google::protobuf::int32 value) {
  _set_bit(5);
  dest_stationid_ = value;
}

// required double creation_time = 7;
inline bool PassengerStatus::has_creation_time() const {
  return _has_bit(6);
}
inline void PassengerStatus::clear_creation_time() {
  creation_time_ = 0;
  _clear_bit(6);
}
inline double PassengerStatus::creation_time() const {
  return creation_time_;
}
inline void PassengerStatus::set_creation_time(double value) {
  _set_bit(6);
  creation_time_ = value;
}

// optional float wait_time = 8;
inline bool PassengerStatus::has_wait_time() const {
  return _has_bit(7);
}
inline void PassengerStatus::clear_wait_time() {
  wait_time_ = 0;
  _clear_bit(7);
}
inline float PassengerStatus::wait_time() const {
  return wait_time_;
}
inline void PassengerStatus::set_wait_time(float value) {
  _set_bit(7);
  wait_time_ = value;
}

// optional float travel_time = 9;
inline bool PassengerStatus::has_travel_time() const {
  return _has_bit(8);
}
inline void PassengerStatus::clear_travel_time() {
  travel_time_ = 0;
  _clear_bit(8);
}
inline float PassengerStatus::travel_time() const {
  return travel_time_;
}
inline void PassengerStatus::set_travel_time(float value) {
  _set_bit(8);
  travel_time_ = value;
}

// optional int32 weight = 10;
inline bool PassengerStatus::has_weight() const {
  return _has_bit(9);
}
inline void PassengerStatus::clear_weight() {
  weight_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 PassengerStatus::weight() const {
  return weight_;
}
inline void PassengerStatus::set_weight(::google::protobuf::int32 value) {
  _set_bit(9);
  weight_ = value;
}

// optional bool trip_complete = 11;
inline bool PassengerStatus::has_trip_complete() const {
  return _has_bit(10);
}
inline void PassengerStatus::clear_trip_complete() {
  trip_complete_ = false;
  _clear_bit(10);
}
inline bool PassengerStatus::trip_complete() const {
  return trip_complete_;
}
inline void PassengerStatus::set_trip_complete(bool value) {
  _set_bit(10);
  trip_complete_ = value;
}

// optional bool trip_success = 12;
inline bool PassengerStatus::has_trip_success() const {
  return _has_bit(11);
}
inline void PassengerStatus::clear_trip_success() {
  trip_success_ = false;
  _clear_bit(11);
}
inline bool PassengerStatus::trip_success() const {
  return trip_success_;
}
inline void PassengerStatus::set_trip_success(bool value) {
  _set_bit(11);
  trip_success_ = value;
}

// -------------------------------------------------------------------

// RoutingEntry

// required int32 vID = 1;
inline bool RoutingEntry::has_vid() const {
  return _has_bit(0);
}
inline void RoutingEntry::clear_vid() {
  vid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RoutingEntry::vid() const {
  return vid_;
}
inline void RoutingEntry::set_vid(::google::protobuf::int32 value) {
  _set_bit(0);
  vid_ = value;
}

// required int32 tsID = 2;
inline bool RoutingEntry::has_tsid() const {
  return _has_bit(1);
}
inline void RoutingEntry::clear_tsid() {
  tsid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 RoutingEntry::tsid() const {
  return tsid_;
}
inline void RoutingEntry::set_tsid(::google::protobuf::int32 value) {
  _set_bit(1);
  tsid_ = value;
}

// optional int32 msgID = 3;
inline bool RoutingEntry::has_msgid() const {
  return _has_bit(2);
}
inline void RoutingEntry::clear_msgid() {
  msgid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RoutingEntry::msgid() const {
  return msgid_;
}
inline void RoutingEntry::set_msgid(::google::protobuf::int32 value) {
  _set_bit(2);
  msgid_ = value;
}

// -------------------------------------------------------------------

// SwitchStatus

// required int32 swID = 1;
inline bool SwitchStatus::has_swid() const {
  return _has_bit(0);
}
inline void SwitchStatus::clear_swid() {
  swid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SwitchStatus::swid() const {
  return swid_;
}
inline void SwitchStatus::set_swid(::google::protobuf::int32 value) {
  _set_bit(0);
  swid_ = value;
}

// optional string label = 2;
inline bool SwitchStatus::has_label() const {
  return _has_bit(1);
}
inline void SwitchStatus::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& SwitchStatus::label() const {
  return *label_;
}
inline void SwitchStatus::set_label(const ::std::string& value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void SwitchStatus::set_label(const char* value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void SwitchStatus::set_label(const char* value, size_t size) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SwitchStatus::mutable_label() {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// repeated .prt.RoutingEntry entry = 3;
inline int SwitchStatus::entry_size() const {
  return entry_.size();
}
inline void SwitchStatus::clear_entry() {
  entry_.Clear();
}
inline const ::prt::RoutingEntry& SwitchStatus::entry(int index) const {
  return entry_.Get(index);
}
inline ::prt::RoutingEntry* SwitchStatus::mutable_entry(int index) {
  return entry_.Mutable(index);
}
inline ::prt::RoutingEntry* SwitchStatus::add_entry() {
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prt::RoutingEntry >&
SwitchStatus::entry() const {
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::prt::RoutingEntry >*
SwitchStatus::mutable_entry() {
  return &entry_;
}

// -------------------------------------------------------------------

// TrackSegmentStatus

// required int32 tsID = 1;
inline bool TrackSegmentStatus::has_tsid() const {
  return _has_bit(0);
}
inline void TrackSegmentStatus::clear_tsid() {
  tsid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 TrackSegmentStatus::tsid() const {
  return tsid_;
}
inline void TrackSegmentStatus::set_tsid(::google::protobuf::int32 value) {
  _set_bit(0);
  tsid_ = value;
}

// optional string label = 2;
inline bool TrackSegmentStatus::has_label() const {
  return _has_bit(1);
}
inline void TrackSegmentStatus::clear_label() {
  if (label_ != &_default_label_) {
    label_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& TrackSegmentStatus::label() const {
  return *label_;
}
inline void TrackSegmentStatus::set_label(const ::std::string& value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void TrackSegmentStatus::set_label(const char* value) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void TrackSegmentStatus::set_label(const char* value, size_t size) {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TrackSegmentStatus::mutable_label() {
  _set_bit(1);
  if (label_ == &_default_label_) {
    label_ = new ::std::string;
  }
  return label_;
}

// required int32 max_speed = 3;
inline bool TrackSegmentStatus::has_max_speed() const {
  return _has_bit(2);
}
inline void TrackSegmentStatus::clear_max_speed() {
  max_speed_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 TrackSegmentStatus::max_speed() const {
  return max_speed_;
}
inline void TrackSegmentStatus::set_max_speed(::google::protobuf::int32 value) {
  _set_bit(2);
  max_speed_ = value;
}

// required int32 length = 4;
inline bool TrackSegmentStatus::has_length() const {
  return _has_bit(3);
}
inline void TrackSegmentStatus::clear_length() {
  length_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 TrackSegmentStatus::length() const {
  return length_;
}
inline void TrackSegmentStatus::set_length(::google::protobuf::int32 value) {
  _set_bit(3);
  length_ = value;
}

// repeated int32 vID = 5 [packed = true];
inline int TrackSegmentStatus::vid_size() const {
  return vid_.size();
}
inline void TrackSegmentStatus::clear_vid() {
  vid_.Clear();
}
inline ::google::protobuf::int32 TrackSegmentStatus::vid(int index) const {
  return vid_.Get(index);
}
inline void TrackSegmentStatus::set_vid(int index, ::google::protobuf::int32 value) {
  vid_.Set(index, value);
}
inline void TrackSegmentStatus::add_vid(::google::protobuf::int32 value) {
  vid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TrackSegmentStatus::vid() const {
  return vid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TrackSegmentStatus::mutable_vid() {
  return &vid_;
}

// required int32 next = 6;
inline bool TrackSegmentStatus::has_next() const {
  return _has_bit(5);
}
inline void TrackSegmentStatus::clear_next() {
  next_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 TrackSegmentStatus::next() const {
  return next_;
}
inline void TrackSegmentStatus::set_next(::google::protobuf::int32 value) {
  _set_bit(5);
  next_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace prt

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< prt::Misc>() {
  return prt::Misc_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< prt::CtrlMsgType>() {
  return prt::CtrlMsgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< prt::LocationType>() {
  return prt::LocationType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< prt::StationPolicy>() {
  return prt::StationPolicy_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< prt::SimMsgType>() {
  return prt::SimMsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2eproto__INCLUDED
